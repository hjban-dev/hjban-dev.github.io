{"version":3,"sources":["webpack:///./src/components/Posts.js"],"names":["Posts","category","post","allMarkdownRemark","edges","map","node","frontmatter","disc","className","key","id","to","fields","slug","title","substring","excerpt"],"mappings":"04rDAoDeA,IAjDD,SAAAC,GACZ,IAoBMC,EApBQ,OAoBQC,kBAAkBC,MAAMC,KAAI,SAAAH,GAChD,GAAID,EAASA,WAAaC,EAAKI,KAAKC,YAAYN,SAC9C,OAAIA,EAASO,KAET,wBAAIC,UAAU,WAAWC,IAAKR,EAAKI,KAAKK,IACtC,kBAAC,OAAD,CAAMC,GAAE,IAAMV,EAAKI,KAAKO,OAAOC,MAC7B,0BAAML,UAAU,OAAOP,EAAKI,KAAKC,YAAYQ,OAC7C,0BAAMN,UAAU,QAAQP,EAAKI,KAAKO,OAAOC,KAAKE,UAAU,EAAG,IAA3D,KACA,yBAAKP,UAAU,QAAQP,EAAKI,KAAKW,QAAjC,OAMJ,wBAAIR,UAAU,WAAWC,IAAKR,EAAKI,KAAKK,IACtC,kBAAC,OAAD,CAAMC,GAAE,IAAMV,EAAKI,KAAKO,OAAOC,MAC7B,0BAAML,UAAU,OAAOP,EAAKI,KAAKC,YAAYQ,OAC7C,0BAAMN,UAAU,QAAQP,EAAKI,KAAKO,OAAOC,KAAKE,UAAU,EAAG,IAA3D,UAQZ,OAAO,wBAAIP,UAAU,aAAd,IAA4BP,EAA5B","file":"99cb600306636b0a4fe1e63da67abbb825c14ee9-28c16d01047efa42d5fe.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\n\r\nconst Posts = category => {\r\n  const Postdata = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { fields: fields___slug, order: DESC }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              category\r\n            }\r\n            fields {\r\n              slug\r\n            }\r\n            excerpt(pruneLength: 230, format: PLAIN)\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const post = Postdata.allMarkdownRemark.edges.map(post => {\r\n    if (category.category === post.node.frontmatter.category) {\r\n      if (category.disc) {\r\n        return (\r\n          <li className=\"post_tit\" key={post.node.id}>\r\n            <Link to={`/${post.node.fields.slug}`}>\r\n              <span className=\"tit\">{post.node.frontmatter.title}</span>\r\n              <span className=\"date\">{post.node.fields.slug.substring(0, 10)} </span>\r\n              <div className=\"disc\">{post.node.excerpt} </div>\r\n            </Link>\r\n          </li>\r\n        )\r\n      } else {\r\n        return (\r\n          <li className=\"post_tit\" key={post.node.id}>\r\n            <Link to={`/${post.node.fields.slug}`}>\r\n              <span className=\"tit\">{post.node.frontmatter.title}</span>\r\n              <span className=\"date\">{post.node.fields.slug.substring(0, 10)} </span>\r\n            </Link>\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n  })\r\n\r\n  return <ul className=\"post_list\"> {post} </ul>\r\n}\r\n\r\nexport default Posts\r\n\r\n//  const HomePage = () => {\r\n// \t const HomePage = ({data}) => {\r\n// \t  return (\r\n// \t\t<div>\r\n// \t     Hello!\r\n// \t     {data.site.siteMetadata.description}\r\n// \t\t</div>\r\n// \t  )\r\n// \t}\r\n\r\n// \texport const query = graphql`\r\n// \t  query HomePageQuery {\r\n// \t\tsite {\r\n// \t\t  siteMetadata {\r\n// \t\t\tdescription\r\n// \t\t  }\r\n// \t\t}\r\n// \t  }\r\n// \t`\r\n\r\n// \texport default Posts\r\n"],"sourceRoot":""}