{"componentChunkName":"component---src-templates-blog-template-js","path":"/2019-12-06-level1-07-center_text","result":{"data":{"markdownRemark":{"frontmatter":{"title":"level 1-7. 가운데 글자 가져오기 (Javascript)","tags":["Algorithm","Javascript","Exercise"]},"fields":{"slug":"2019-12-06-level1-07-center_text"},"html":"<h1>level 1. 가운데 글자 가져오기</h1>\n<blockquote>\n<p>출처 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12903\">https://programmers.co.kr/learn/courses/30/lessons/12903</a></p>\n</blockquote>\n<h2>문제</h2>\n<pre><code>단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.\n</code></pre>\n<h3>제한사항</h3>\n<ul>\n<li>s는 길이가 1 이상, 100이하인 스트링입니다.</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\"abcde\"</td>\n<td>\"c\"</td>\n</tr>\n<tr>\n<td>\"qwer\"</td>\n<td>\"we\"</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>내가 한 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(s) {\n  var answer = '';\n  var sLength = Math.floor(s.length/2);\n\n  answer = (s.length % 2 == 0) ? s[sLength-1]+s[sLength] : s[sLength];\n  return answer;\n}\n</code></pre>\n<p>변수 sLength 는 매개변수 s의 개수를 2로 나눈 몫\nanswer 는 s.length를 2로 나눈 나머지가 0 이라면 sLength 번째 문자열과 sLength+1 번째 문자열을 반환.\n그렇지 않으면 sLength 번째의 문자열 반환</p>\n<hr>\n<h2>다른사람 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(s) {\n  return s.substr(Math.ceil(s.length / 2) - 1, s.length % 2 === 0 ? 2 : 1);\n}\n</code></pre>\n<p>후... <code>substr()</code> 지정된 위치의 문자열의 일부를 반환하는 메서드..<br>\n들어온 문자열의 개수를 2로 나눈 수에서 1을 뺀 수(인덱스) 부터 나머지가 0 이면 2글자, 1이면 한글자 반환\n넘나 깔끔 + 퍼펙트...</p>\n<pre><code class=\"language-javascript\">function solution(a, b, answer = 0) {\n  for (var i = Math.min(a, b); i &#x3C;= Math.max(a, b); i++) answer += i;\n  return answer;\n}\n</code></pre>\n<p>처음부터 answer 라는 변수를 0으로 넣어주었다.\n반복문으로 a와 b중 작은수를 i의 값으로 넣어주고, 큰 수의 값까지 만큼 반복문을 돌렸다.<br>\nanswer 에 작은 수 부터 큰 수까지 더해줌.</p>\n<hr>\n<h2>배운점</h2>\n<p>진짜 기본 메서드 활용할 수 있는게 엄청 많은데...!<br>\n<code>substr()</code> <code>charAt()</code> <code>repeat()</code> <code>splice()</code> <code>reduce()</code> <code>sort()</code> 지금 까지 나온 메서드의 활용법이라도 외워두자..!</p>\n<p>String</p>\n<ul>\n<li>substr( start [, length] ) : 문자열 일부 추출 [String]</li>\n<li>charAt( index ) : 문자열 반환 [String]</li>\n<li>repeat( index ) : 문자열을 반복하여 반환 [String]</li>\n</ul>\n<p>Array</p>\n<ul>\n<li>splice( start, length [, itme] ) : 배열의 요소를 제거하거나 추출 [Array]</li>\n<li>reduce( callback [, initialValue] ) : 하나의 결과값을 반환 [Array]</li>\n<li>sort( [compareFunction] ) : 정렬 후 반환 [Array]</li>\n</ul>","id":"37c6b757-e789-59d0-8576-f2e3603d778a"}},"pageContext":{"slug":"2019-12-06-level1-07-center_text"}}}