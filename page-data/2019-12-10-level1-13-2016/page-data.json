{"componentChunkName":"component---src-templates-blog-template-js","path":"/2019-12-10-level1-13-2016","result":{"data":{"markdownRemark":{"frontmatter":{"title":"level 1-13. 2016년 (Javascript)","tags":["Algorithm","Javascript","Exercise"]},"fields":{"slug":"2019-12-10-level1-13-2016"},"html":"<h1>level 1. 2016년</h1>\n<blockquote>\n<p>출처 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12901\">https://programmers.co.kr/learn/courses/30/lessons/12901</a></p>\n</blockquote>\n<h2>문제</h2>\n<pre><code>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT 입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 TUE를 반환하세요.\n</code></pre>\n<h3>제한사항</h3>\n<ul>\n<li>2016년은 윤년입니다.</li>\n<li>2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th>b</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>24</td>\n<td>TUE</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>FRI</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>내가 한 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(a, b) {\n  var day = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"]\n  var setDate = new Date;\n  setDate.setFullYear( 2016, a-1, b)\n  var answer = setDate.getDay();\n  return day[answer];\n}\n</code></pre>\n<p>Date 객체 생성 후 setFullYear() 메서드로 날짜 지정\ngetDay() 메서드로 요일 인덱스 불러와서 day 변수에 저장된 요일을 불러옴.</p>\n<hr>\n<h2>다른사람 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(a, b) {\n  var date = new Date(2016, (a - 1), b);\n  return date.toString().slice(0, 3).toUpperCase();\n}\n</code></pre>\n<p>Date 객체를 생성할때 특정 날짜를 지정할 수 있다.<br>\nDate 객체 결과엔 요일, 월도 포함되어 object 자료형으로 나온다. toString() 메서드로 string 으로 변환 시킨 후 slice() 메서드로 요일 부분만 잘라내고, toUpperCase() 메서드로 대문자 형식으로 바꿔줌.</p>\n<h2>배운점</h2>\n<p>처음부터 문제 이해하는데 오래걸렸다.<br>\n예시로 들었던 2016년 1월 1일이 금요일이라는 조건이 진짜 있는 날인지, 문제의 조건인지 헷갈려서 어디서부터 잡아야할지 몰랐다. 결국 네이버 달력 검색해서 실제인 조건인지 찾아봤고, 실제 있는 날이였다. 처음부터 그렇다고 말했으면 훨씬 빠르고 쉽게 접근할 수 있었을텐데.  </p>\n<p>또 프로그래머스 페이지 내에 코드 실행 환경에서 new Date(); 를 아무리 실행해도 Date.now() 검색결과로 나오고 new Date 를 실행해도 요일이랑 월이 안나와서 왜 안되는지 답답해서 죽을뻔했다. 결국 또 구글 검색을 할 수 밖에 없었고, 코드는 똑같은데 결과가 안나와서 찾고 찾고 또 찾고.  </p>\n<p>결국 마음에 들지 않는 코드로 문제를 풀었고 그 스트레스가 지금까지 머리를 아프게 함.<br>\n필요없는 day 변수도 싫고 내가 아는 지식이 다르게 나와서 받은 스트레스.</p>\n<p>내일 포스팅하려다가 이거 완성 못시키면 속 뒤집어질 것 같아서 바로 포스팅. 분하다</p>\n<hr>\n<pre><code class=\"language-javascript\">// Date 객체 생성\nvar date = new Date(); // Wed Dec 11 2019 10:30:17 GMT+0900 (한국 표준시)\nvar date = new Date(2016, 5, 25, 15, 40, 0); // Sat Jun 25 2016 15:40:00 GMT+0900 (한국 표준시) {}\n</code></pre>\n<p>Date 객체의 매개변수가 없으면 현재 날짜와 시간을 가지고 Date 객체를 생성합니다.<br>\nDate 객체의 매개변수가 있으면 그 형태에 따라 특정 날짜와 시간을 가리키는 Date 객체를 생성합니다.</p>\n<h3>getter 메서드</h3>\n<p>날짜와 관련된 <code>정보를 받아오기</code> 위한 메소드입니다.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n<th>range</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>getDate()</code></td>\n<td>현지 시각으로 현재 일자에 해당하는 숫자를 반환함.</td>\n<td>1 ~ 31</td>\n</tr>\n<tr>\n<td><code>getDay()</code></td>\n<td>현지 시각으로 현재 요일에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 6</td>\n</tr>\n<tr>\n<td><code>getMonth()</code></td>\n<td>현지 시각으로 현재 월에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 11</td>\n</tr>\n<tr>\n<td><code>getFullYear()</code></td>\n<td>현지 시각으로 현재 연도를 4비트의 숫자(YYYY)로 반환함.</td>\n<td>YYYY</td>\n</tr>\n<tr>\n<td>getHours()</td>\n<td>현지 시각으로 현재 시각에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 23</td>\n</tr>\n<tr>\n<td>getMilliseconds()</td>\n<td>현지 시각으로 현재 시각의 밀리초에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 999</td>\n</tr>\n<tr>\n<td>getMinutes()</td>\n<td>현지 시각으로 현재 시각의 분에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 59</td>\n</tr>\n<tr>\n<td>getSeconds()</td>\n<td>현지 시각으로 현재 시각의 초에 해당하는 숫자를 반환함.</td>\n<td>0 ~ 59</td>\n</tr>\n<tr>\n<td>getTime()</td>\n<td>1970년 1월 1일 0시 0분 0초부터 현재까지의 시간을 밀리초 단위로 환산한 값을 숫자로 반환함.</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getTimezoneOffset()</td>\n<td>UTC로부터 현재 시각까지의 시간차를 분 단위로 환산한 값을 숫자로 반환함.</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>setter 메서드</h3>\n<p>날짜와 관련된 <code>정보를 설정하기</code> 위한 메소드입니다.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n<th>range</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>setDate()</code></td>\n<td>현지 시각으로 특정 일자를 설정함.</td>\n<td>1 ~ 31</td>\n</tr>\n<tr>\n<td><code>setMonth()</code></td>\n<td>현지 시각으로 특정 월을 설정함.</td>\n<td>0 ~ 11</td>\n</tr>\n<tr>\n<td><code>setFullYear()</code></td>\n<td>현지 시각으로 특정 연도를 설정함. (<code>연도뿐만 아니라 월과 일자도 설정할 수 있음</code>)</td>\n<td>YYYY, MM, DD</td>\n</tr>\n<tr>\n<td>setHours()</td>\n<td>현지 시각으로 특정 시간을 설정함.</td>\n<td>0 ~ 23</td>\n</tr>\n<tr>\n<td>setMilliseconds()</td>\n<td>현지 시각으로 특정 밀리초를 설정함.</td>\n<td>0 ~ 999</td>\n</tr>\n<tr>\n<td>setMinutes()</td>\n<td>현지 시각으로 특정 분을 설정함.</td>\n<td>0 ~ 59</td>\n</tr>\n<tr>\n<td>setSeconds()</td>\n<td>현지 시각으로 특정 초를 설정함.</td>\n<td>0 ~ 59</td>\n</tr>\n<tr>\n<td>setTime()</td>\n<td>1970년 1월 1일 0시 0분 0초부터 밀리초 단위로 표현되는 특정 시간을 설정함.</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>","id":"4f81434f-2658-5c87-939d-e67855c35451"}},"pageContext":{"slug":"2019-12-10-level1-13-2016"}}}