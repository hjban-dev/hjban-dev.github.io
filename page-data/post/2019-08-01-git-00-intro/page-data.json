{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2019-08-01-git-00-intro","result":{"data":{"markdownRemark":{"frontmatter":{"title":"git 개념 정리 및 기본 용어, 소스트리","tags":["Git"]},"fields":{"slug":"2019-08-01-git-00-intro"},"html":"<blockquote>\n<p>인프런 강의 중 <a href=\"https://www.inflearn.com/course/git-and-github\">정호영 - git과 github</a> 수업을 듣고 중요 내용을 정리합니다.  </p>\n</blockquote>\n<h1>git 은?</h1>\n<ul>\n<li>형상 관리 시스템(Verson Control System) 의 한 종류입니다. 주로 개발자들이 프로그램과 관련된 파일들을 저장하는 데 사용합니다. 게임의 세이브 포인트와 유사한데, 언제든지 저장 시점으로 되돌아 갈 수 있습니다. 여기서는 세 가지 기본 기념만 배우려 합니다.</li>\n</ul>\n<hr>\n<h2>스테이지에 올린다 (add)</h2>\n<ul>\n<li>앞에서 커밋하기 전에 저장을 원하는 파일들을 묶는 일을 해야 한다고 했습니다. 이 작업을 '스테이지에 파일을 올린다' 고 합니다. 혹은 줄여서 간단히 <code>add</code> 라고도 합니다.</li>\n</ul>\n<h2>커밋 (commit)</h2>\n<ul>\n<li>게임의 세이브에 해당하는 행동을 git에서는 <code>commit</code> 이라고 합니다. 다시 말해서 여러분은 언제든지 커밋한 시점으로 되돌아 갈 수 있습니다 . 커밋을 하려면 저장을 원하는 파일들을 묶어서 커밋 명령을 수행하면 됩니다.</li>\n<li>반드시 한 번에 하나의 논리적 작업만을 커밋합니다.</li>\n<li>커밋 메시지는 공유하는 내용입니다. 의미 있는 내용을 적습니다.</li>\n</ul>\n<h2>github에 업로드 (push)</h2>\n<ul>\n<li>커밋을 하면 이제 현재 작업 내용의 세이브 데이터가 내 컴퓨터에 저장됩니다. 이걸 github에 업로드하면 다른 사람이랑 공유할 수도 있고, 내 컴퓨터의 데이터가 날아가도 안전하게 다시 복구할 수 있습니다. github에 업로드하는 걸 git에서는 <code>push</code> 라고 합니다.</li>\n</ul>\n<hr>\n<h1>Source Tree 사용</h1>\n<ul>\n<li>git 을 편리하고 직관적으로 사용하게 도와주는 프로그램</li>\n</ul>\n<h2>Source Tree를 통해서 저장소 클론 (clone)</h2>\n<ul>\n<li>소스트리의 <code>Clone</code> 또는 '복제 / 생성' 메뉴를 통해 github 에서 생성한 저장소를 클론해 올 수 있습니다. github에서 생성한 저장소 주소를 넣어주면 됩니다. 보통 \"내문서\" 아래에 저장소 이름과 같은 새로운 폴더가 만들어집니다.</li>\n</ul>\n<hr>\n<h1>요약</h1>\n<ul>\n<li>add: 내 컴퓨터에서 작업한 파일들을 스테이지에 추가</li>\n<li>commit: 스테이지에 올라온 파일들을 가지고 내 컴퓨터에 저장 (세이브와 같다.)</li>\n<li>push: 커밋들을 원격 저장소에 업로드</li>\n<li>clone: 원격 저장소 (github)를 내 컴퓨터에 복사해 온다.</li>\n</ul>","id":"6f70db50-6043-5a40-96d5-488ff9f43bb6"}},"pageContext":{"slug":"2019-08-01-git-00-intro"}}}