{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2019-12-09-level1-10-number_of_k","result":{"data":{"markdownRemark":{"frontmatter":{"title":"level 1-10. K번째수 (Javascript)","tags":["Algorithm","Javascript","Exercise"]},"fields":{"slug":"2019-12-09-level1-10-number_of_k"},"html":"<h1>level 1. K번째수</h1>\n<blockquote>\n<p>출처 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42748\">https://programmers.co.kr/learn/courses/30/lessons/42748</a></p>\n</blockquote>\n<h2>문제</h2>\n<pre><code>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.\n\n예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면\n\n  1. array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.\n  2. 1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.\n  3. 2에서 나온 배열의 3번째 숫자는 5입니다.  \n\n배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.\n</code></pre>\n<h3>제한사항</h3>\n<ul>\n<li>array의 길이는 1 이상 100 이하입니다.</li>\n<li>array의 각 원소는 1 이상 100 이하입니다.</li>\n<li>commands의 길이는 1 이상 50 이하입니다.</li>\n<li>commands의 각 원소는 길이가 3입니다.</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>array</th>\n<th>commands</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1, 5, 2, 6, 3, 7, 4]</td>\n<td>[[2, 5, 3], [4, 4, 1], [1, 7, 3]]</td>\n<td>[5, 6, 3]</td>\n</tr>\n</tbody>\n</table>\n<p>입출력 예 설명  </p>\n<ol>\n<li>[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.</li>\n<li>[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.</li>\n<li>[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.</li>\n</ol>\n<hr>\n<h2>내가 한 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(array, commands) {\n  var answer = [];\n\n  for(var i = 0; i&#x3C;commands.length; i++){\n    var slice_sort = array.slice(commands[i][0]-1, commands[i][1])\n                          .sort(function(a, b){ return a - b; }) \n                          .splice(commands[i][2] - 1 ,1);\n    answer.push(Number(slice_sort));\n  }\n  \n  return answer;\n}\n</code></pre>\n<p>그동안 공부했던 array 관련 메서드를 활용할 수 있었다.  </p>\n<ol>\n<li>들어오는 array <code>slice()</code> 메서드를 활용하여 commands의 배열의 첫번째, 두번째 요소로 자름</li>\n<li><code>sort()</code> 메서드로 오름차순으로 정렬</li>\n<li><code>splice()</code> 메서드로 commands 의 세번째 요소를 잘라냄</li>\n<li>결과로 나온 배열 slice_sort를 숫자열로 바꾸고 answer 변수에 <code>push()</code> 로 채워넣고, return</li>\n</ol>\n<hr>\n<h2>다른사람 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(seoul) {\n  return commands.map(v => {\n    return array.slice(v[0] - 1, v[1]).sort((a, b) => a - b).slice(v[2] - 1, v[2])[0];\n  });\n}\n</code></pre>\n<p><code>map()</code> 메서드로 새 배열을 생성. 내 코드의 push(), Number() 기능을 쓰지 않아도 됨.</p>\n<h2>배운점</h2>\n<p>생각보다 어려웠다. 써야하는 메서드도 많았고 복잡했다. 만명 이상이 문제를 풀은걸 보면 다들 열심히 하나보다. 가만히 있을 순 없음.</p>\n<p><strong>array.map(function(currentValue, index, arr), thisValue)</strong><br>\n함수를 호출 한 결과로 새 배열을 작성, 배열의 각 요소에 대해 제공된 함수를 순서대로 한 번 호출 </p>","id":"48853c1f-ff73-598b-81e6-12ba5d94733c"}},"pageContext":{"slug":"2019-12-09-level1-10-number_of_k"}}}