{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-01-07-level1-20-collatz","result":{"data":{"markdownRemark":{"frontmatter":{"title":"level 1-20. 콜라츠 추측 (Javascript)","tags":["Algorithm","Javascript","Exercise"]},"fields":{"slug":"2020-01-07-level1-20-collatz"},"html":"<h1>level 1. 콜라츠 추측</h1>\n<blockquote>\n<p>출처 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12943\">https://programmers.co.kr/learn/courses/30/lessons/12943</a></p>\n</blockquote>\n<h2>문제</h2>\n<pre><code>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.\n\n1-1. 입력된 수가 짝수라면 2로 나눕니다. \n1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.\n2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.\n\n예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.\n</code></pre>\n<h3>제한사항</h3>\n<ul>\n<li>입력된 수, num은 1 이상 8000000 미만인 정수입니다.</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>6</td>\n<td>8</td>\n</tr>\n<tr>\n<td>16</td>\n<td>4</td>\n</tr>\n<tr>\n<td>626331</td>\n<td>-1</td>\n</tr>\n</tbody>\n</table>\n<p>입출력 예 설명</p>\n<ol>\n<li>입력된 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다.</li>\n<li>16 → 8 → 4 → 2 → 1 이되어 총 4번만에 1이 됩니다.</li>\n<li>626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.</li>\n</ol>\n<hr>\n<h2>내가 한 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(num) {\n  var result = 0;\n\n  while (num > 1 &#x26;&#x26; result &#x3C; 500){\n    num = (num%2 == 0) ?  num/2 : num*3+1;\n    result++;\n  };\n\n  return (result == 500) ? -1 : result;\n}\n</code></pre>\n<p>다행히 문제 보자마자 대충 흐름이 이해가 됐다. 그래서 금방 풀었는데...!<br>\n근데... 채점하는데 13번 테스트에서 계속 실패데스... 왜 인지 통 모르겠어서 한참 고생했는데 입력 수가 1이라면 return이 0 이 되어야 했다. 그 조건이 없으니 1일때 결과 값이 3이라서 그랬음ㅠㅠ</p>\n<hr>\n<h2>다른사람 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(num,count = 0) {\n  return num == 1 ? (count >= 500 ? -1 : count) : solution(num % 2 == 0 ? num / 2 : num * 3 + 1,++count);\n}\n</code></pre>\n<p>solution 함수를 내부에서 또 호출했다. 재귀함수 맞나..? 흠 이 코드는 꽤나 흥미롭군...<br>\n갈길이 멀었다는 걸 또 깨닫는다.<br>\n초기에 실행값으로 count를 지정해주고 return 삼항조건문으로 내부 코드 바로 실행.</p>\n<h2>배운점</h2>\n<p>내가 생각하지 못하는 변수가 있을 수 있다. 방심하지 말고 여러 방면에서 생각해보자.</p>","id":"6ea8024b-859a-5ae0-a66b-eccd8d20f440"}},"pageContext":{"slug":"2020-01-07-level1-20-collatz"}}}