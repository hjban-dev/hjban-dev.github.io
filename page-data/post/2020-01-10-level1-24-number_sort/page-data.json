{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-01-10-level1-24-number_sort","result":{"data":{"markdownRemark":{"frontmatter":{"title":"level 1-24. 정수 내림차순으로 배치하기 (Javascript)"},"html":"<h1>level 1. 정수 내림차순으로 배치하기</h1>\n<blockquote>\n<p>출처 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/12933\">https://programmers.co.kr/learn/courses/30/lessons/12933</a></p>\n</blockquote>\n<h2>문제</h2>\n<pre><code>함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.\n</code></pre>\n<h3>제한사항</h3>\n<ul>\n<li>n은 1이상 8000000000 이하인 자연수입니다.</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>118372</td>\n<td>873211</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>내가 한 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(n) {\n  const answer = (n+'').split('').sort( (a, b) => b - a ).join('');\n  return parseInt(answer); \n}\n</code></pre>\n<p>이것도 전 포스팅인 <a href=\"https://hjban-dev.github.io/algorithm/2020/01/08/level1-21-sum_of_number/\">21.자릿수 더하기</a>, <a href=\"https://hjban-dev.github.io/algorithm/2020/01/08/level1-22-arr_of_number/\">22.자연수 뒤집어 배열로 만들기</a>, <a href=\"https://hjban-dev.github.io/algorithm/2020/01/08/level1-23-hashad/\">23.자연수 뒤집어 배열로 만들기</a> 랑 비슷한 문제였다. </p>\n<hr>\n<h2>다른사람 풀이</h2>\n<pre><code class=\"language-javascript\">function solution(n) {\n  return parseInt((n+\"\").split(\"\").sort().reverse().join(\"\"));\n}\n</code></pre>\n<p>한글자의 숫자뿐이라 굳이 sort() 내부 함수 쓸 필요없이 sort()와 reverse() 메서드 실행.</p>\n<h2>배운점</h2>\n<p>다 21-24번이 비슷한 문제였다.</p>"}},"pageContext":{"slug":"2020-01-10-level1-24-number_sort"}}}