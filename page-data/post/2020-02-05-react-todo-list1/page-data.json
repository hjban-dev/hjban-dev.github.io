{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2020-02-05-react-todo-list1","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Todo_List ReactJS 컴포넌트 구성","tags":["React"]},"fields":{"slug":"2020-02-05-react-todo-list1"},"html":"<blockquote>\n<p>React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert <a href=\"https://velopert.com/3480\">https://velopert.com/3480</a>\n<a href=\"https://github.com/hjban-dev/todo-react\">Todo-List 결과물 확인</a></p>\n</blockquote>\n<h1>Todo_List</h1>\n<h2>0. 시작하기</h2>\n<p>필자는 node, yarn, VS code 사용. </p>\n<pre><code>yarn global add create-react-app &#x3C;!-- create-react-app 설치 -->\ncreate-react-app todo-list &#x3C;!-- todo-list 프로젝트 생성 -->\nyarn start &#x3C;!-- todo-list 디렉토리에서 명령어를 실행 -->\n</code></pre>\n<h3>프로젝트 구성요소</h3>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/todo-list_1.jpg\" alt=\"\">\n<figcaption>프로젝트 구성요소</figcaption>\n</figure>\n</center>\n<h3>프로젝트 초기화</h3>\n<pre><code class=\"language-javascript\">// --- src/App.js ---\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      &#x3C;div>\n        App\n      &#x3C;/div>\n    );\n  }\n}\n\nexport default App;\n</code></pre>\n<p>같은 위치에 App.css, App.test.js, logo.svg 파일도 제거</p>\n<h2>1. 컴포넌트 구성하기</h2>\n<p>src 내부에 components 디렉토리 생성하여 컴포넌트들을 이곳에 생성</p>\n<h3>첫번째 컴포넌트, TodoTemplate</h3>\n<ul>\n<li>src/components/TodoListTemplate.js</li>\n<li>src/css/components/TodoListTemplate.css</li>\n</ul>\n<p>TodoListTemplate이라는 이름 그대로 <strong>todo-list를 감싸주는 wrapper</strong>역할을 합니다.</p>\n<pre><code class=\"language-javascript\">// --- src/components/TodoListTemplate.js ---\nimport React from 'react';\nimport './css/TodoListTemplate.css';\n\nconst TodoListTemplate = ({form, children}) => {\n  return (\n    &#x3C;main className=\"todo-list-template\">\n      &#x3C;div className=\"title\">\n        오늘 할 일\n      &#x3C;/div>\n      &#x3C;section className=\"form-wrapper\">\n        {form}\n      &#x3C;/section>\n      &#x3C;section className=\"todos-wrapper\">\n        { children }\n      &#x3C;/section>\n    &#x3C;/main>\n  );\n};\n\nexport default TodoListTemplate;\n</code></pre>\n<p>함수형 컴포넌트이고 form, children 이라는 props를 받습니다.<br>\ncss는 생략하겠습니다.  </p>\n<p>TodoListTemplate을 App에서 불러오겠습니다.</p>\n<pre><code class=\"language-javascript\">// --- src/App.js ---\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\n\nclass App extends Component {\n  render() {\n    return (\n      &#x3C;TodoListTemplate>\n        템플릿 완성\n      &#x3C;/TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n</code></pre>\n<p>Todo-list의 전체 wrapper 생성</p>\n<h3>두번째 컴포넌트, Form</h3>\n<p>그 다음은 텍스트를 입력할 수 있는 <strong>input과 button을 구성하는 Form 컴포넌트</strong>를 생성하겠습니다.<br>\nForm은 총 네개의 props를 받아와야 합니다.</p>\n<ul>\n<li>src/components/Form.js</li>\n<li>src/components/css/Form.css</li>\n</ul>\n<pre><code class=\"language-javascript\">// --- src/components/Form.js ---\nimport React from 'react';\nimport './Form.css';\n\nconst Form = ({value, onChange, onCreate, onKeyPress}) => {\n  return (\n    &#x3C;div className=\"form\">\n      &#x3C;input value={value} onChange={onChange} onKeyPress={onKeyPress}/>\n      &#x3C;div className=\"create-button\" onClick={onCreate}>\n        추가\n      &#x3C;/div>\n    &#x3C;/div>\n  );\n};\n\nexport default Form;\n</code></pre>\n<ul>\n<li>value: 인풋의 내용</li>\n<li>onCreate: 버튼이 클릭 될 때 실행 될 함수</li>\n<li>onChange: 인풋 내용이 변경 될 때 실행되는 함수</li>\n<li>onKeyPress: 인풋에서 키를 입력 할 때 실행되는 함수. 이 함수는 나중에 <strong>Enter</strong> 가 눌렸을 때 onCreate 를 한 것과 동일한 작업을 하기 위해서 사용합니다.</li>\n</ul>\n<p>css는 생략하겠습니다.<br>\nForm 컴포넌트를 생성했으니, App.js에 렌더링하겠습니다.</p>\n<pre><code class=\"language-javascript\">// --- src/App.js ---\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\n\nclass App extends Component {\n  render() {\n    return (\n      &#x3C;TodoListTemplate form={&#x3C;Form/>}>\n        템플릿 완성\n      &#x3C;/TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n</code></pre>\n<p>TodoListTemplate의 props form으로 Form 컴포넌트를 넘겨주었습니다. 그리고 TodoListTemplate는 받은 props form을 form-wrapper안에 넣어서 return 합니다.</p>\n<h3>세번째 컴포넌트, TodoItemList</h3>\n<p>TodoItemList 컴포넌트는 TodoItem 컴포넌트 여러개를 렌더링해주는 역할을 합니다.<br>\n‘리스트’ 를 렌더링하게 될 때는, 클래스형 컴포넌트로 작성해야 나중에 컴포넌트 성능 최적화할 수 있습니다.</p>\n<ul>\n<li>src/components/TodoItemList.js</li>\n</ul>\n<pre><code class=\"language-javascript\">// --- src/components/TodoItemList.js ---\nimport React, { Component } from 'react';\n\nclass TodoItemList extends Component {\n  render() {\n    const { todos, onToggle, onRemove } = this.props;\n\n    return (\n      &#x3C;div>\n\n      &#x3C;/div>\n    );\n  }\n}\n\nexport default TodoItemList;\n</code></pre>\n<ul>\n<li>todos: todo 객체들이 들어있는 배열</li>\n<li>onToggle: 체크박스를 키고 끄는 함수</li>\n<li>onRemove: 아이템을 삭제시키는 함수</li>\n</ul>\n<h3>네번째 컴포넌트, TodoItem</h3>\n<p>이 컴포넌트는, 체크 값이 활성화되어있으면 우측에 체크마크 (✓) 를 보여주고, 마우스가 위에 있을때는 좌측에 엑스마크 (×) 를 보여줍니다.</p>\n<ul>\n<li>src/components/TodoItem.js</li>\n<li>src/components/css/TodoItem.css</li>\n</ul>\n<pre><code class=\"language-javascript\">// --- src/components/TodoItem.js ---\nimport React, { Component } from 'react';\nimport './TodoItem.css';\n\nclass TodoItem extends Component {\n  render() {\n    const { text, checked, id, onToggle, onRemove } = this.props;\n\n    return (\n      &#x3C;div className=\"todo-item\" onClick={() => onToggle(id)}>\n        &#x3C;div className=\"remove\" onClick={(e) => {\n          e.stopPropagation(); // onToggle 이 실행되지 않도록 함\n          onRemove(id)}\n        }>&#x26;times;&#x3C;/div>\n        &#x3C;div className={`todo-text ${checked &#x26;&#x26; 'checked'}`}>\n          &#x3C;div>{text}&#x3C;/div>\n        &#x3C;/div>\n        {\n          checked &#x26;&#x26; (&#x3C;div className=\"check-mark\">✓&#x3C;/div>)\n        }\n      &#x3C;/div>\n    );\n  }\n}\n\nexport default TodoItem;\n</code></pre>\n<ul>\n<li>text: todo 내용</li>\n<li>checked: 체크박스 상태</li>\n<li>id: todo 의 고유 아이디</li>\n<li>onToggle: 체크박스를 키고 끄는 함수</li>\n<li>onRemove: 아이템을 삭제시키는 함수</li>\n</ul>\n<p>그러면 TodoItemList에서 TodoItem컴포넌트를 불러오겠습니다.</p>\n<pre><code class=\"language-javascript\">// --- src/components/TodoItemList.js ---\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoItemList extends Component {\n  render() {\n    const { todos, onToggle, onRemove } = this.props;\n\n    return (\n      &#x3C;div>\n        &#x3C;TodoItem text=\"안녕\"/>\n        &#x3C;TodoItem text=\"리액트\"/>\n        &#x3C;TodoItem text=\"반가워\"/>\n      &#x3C;/div>\n    );\n  }\n}\n\nexport default TodoItemList;\n</code></pre>\n<p>App 에서도 TodoItemList를 불러와야 합니다.</p>\n<pre><code class=\"language-javascript\">// --- src/App.js ---\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\n\nclass App extends Component {\n  render() {\n    return (\n      &#x3C;TodoListTemplate form={&#x3C;Form/>}>\n        &#x3C;TodoItemList/>\n      &#x3C;/TodoListTemplate>\n    );\n  }\n}\n\nexport default App;\n</code></pre>","id":"de2a310d-5911-50dd-8909-0aacb593ff1d"}},"pageContext":{"slug":"2020-02-05-react-todo-list1"}}}