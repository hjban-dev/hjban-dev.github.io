{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-02-06-react-todo-list3","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Todo_List ReactJS 컴포넌트 최적화","tags":["React"]},"fields":{"slug":"2020-02-06-react-todo-list3"},"html":"<blockquote>\n<p>React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert <a href=\"https://velopert.com/3480\">https://velopert.com/3480</a>\n<a href=\"https://github.com/hjban-dev/todo-react\">Todo-List 결과물 확인</a></p>\n</blockquote>\n<h1>Todo_List</h1>\n<h2>3. 컴포넌트 최적화</h2>\n<h3>TodoItemList 최적화</h3>\n<p>지금 TodoItem는 input창에 텍스트를 입력할 때 마다 render함수가 실행되고 있습니다. React에서는 가상 DOM을 사용하기 때문에 변화는 없지만, 미세하게 자원이 낭비되고 있습니다.</p>\n<pre><code class=\"language-javascript\">// --- src/components/TodoItemList.js ---\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoItemList extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.todos !== nextProps.todos;\n  }\n\n  render() {\n    const { todos, onToggle, onRemove } = this.props;\n\n    const todoList = todos.map(\n      ({id, text, checked}) => (\n        &#x3C;TodoItem\n          id={id}\n          text={text}\n          checked={checked}\n          onToggle={onToggle}\n          onRemove={onRemove}\n          key={id}\n        />\n      )\n    );\n\n    return (\n      &#x3C;div>\n        {todoList}    \n      &#x3C;/div>\n    );\n  }\n}\n\nexport default TodoItemList;\n</code></pre>\n<p>컴포넌트 라이프 사이클 메소드중 shouldComponentUpdate 는 컴포넌트가 리렌더링을 할 지 말지 정해줍니다.  </p>\n<p>todos 값이 바뀔 때 리렌더링 하면 되니까 this.props.todos 와 nextProps.todos 를 비교해서 이 값이 다를때만 리렌더링하게 설정하였습니다.</p>\n<h3>TodoItem 컴포넌트 최적화</h3>\n<p>그리고 TodoItem에서도 선택한 TodoItem만 업데이트 되는게 아니라 모든 TodoItem들이 렌더링 되고 있습니다.</p>\n<pre><code class=\"language-javascript\">// --- src/components/TodoItem.js ---\nimport React, { Component } from 'react';\nimport './TodoItem.css';\n\nclass TodoItem extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.checked !== nextProps.checked;\n  }\n\n  render() {\n    (...)\n  }\n}\n\nexport default TodoItem;\n</code></pre>\n<p>this.props.checked와 nextProps.checked 가 다를 때만 return합니다.</p>","id":"097b9d84-b7a3-5268-90d4-226620421924"}},"pageContext":{"slug":"2020-02-06-react-todo-list3"}}}