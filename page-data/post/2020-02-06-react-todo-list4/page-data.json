{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-02-06-react-todo-list4","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Todo_List ReactJS Palette 컴포넌트 추가","tags":["React"]},"fields":{"slug":"2020-02-06-react-todo-list4"},"html":"<blockquote>\n<p>React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert <a href=\"https://velopert.com/3480\">https://velopert.com/3480</a>\n<a href=\"https://github.com/hjban-dev/todo-react\">Todo-List 결과물 확인</a></p>\n</blockquote>\n<h1>Todo_List</h1>\n<p>여기서부터는 필자가 만든 정리...</p>\n<h2>4. Palette 컴포넌트 추가</h2>\n<h3>다섯번째 컴포넌트, Palette</h3>\n<ul>\n<li>src/components/Palette.js</li>\n<li>src/components/css/Palette.css</li>\n</ul>\n<pre><code class=\"language-javascript\">// --- src/components/Palette.js ---\nimport React from \"react\";\nimport \"./css/Palette.css\";\n\nconst Color = ({ color, active, onClick }) => {\n  return (\n    &#x3C;div\n      className={`color ${active &#x26;&#x26; active}`}\n      style={{ background: color }}\n      onClick={onClick}\n    >&#x3C;/div>\n  );\n};\n\nconst Palette = ({ colors, selected, onSelect }) => {\n  const colorList = colors.map(color => (\n    &#x3C;Color\n      color={color}\n      active={selected === color}\n      onClick={() => onSelect(color)}\n      key={color}\n    />\n  ));\n  return &#x3C;div className=\"palette\">{colorList}&#x3C;/div>;\n};\n\nexport default Palette;\n</code></pre>\n<pre><code class=\"language-javascript\">// --- src/App.js ---\n(...)\nimport Palette from \"./components/Palette\";\n\nconst colors = [\"#343a40\", \"#f03e3e\", \"#12b886\", \"#228ae6\"];\n(...)\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: '', // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n(...)\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n(...)\n    return (\n      &#x3C;TodoListTemplate \n        form={\n          &#x3C;Form \n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate}\n          />\n        }\n        palette={\n          &#x3C;Palette colors={colors} />\n        }>\n        &#x3C;TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n      &#x3C;/TodoListTemplate>\n    );\n</code></pre>\n<pre><code class=\"language-javascript\">import React from 'react';\nimport './Form.css';\n\nconst Form = ({value, onChange, onCreate, onKeyPress, color}) => {\n  return (\n    &#x3C;div className=\"form\">\n      &#x3C;input value={value} onChange={onChange} onKeyPress={onKeyPress} style={{color}}/>\n      &#x3C;div className=\"create-button\" onClick={onCreate}>\n        추가\n      &#x3C;/div>\n    &#x3C;/div>\n  );\n};\n\nexport default Form;\n</code></pre>\n<p>TodoListTemplate.js, TodoItemList.js, TodoItem.js는 생략하겠습니다.  </p>\n<blockquote>\n<p><a href=\"https://github.com/hjban-dev/todo-react\">Todo-List 결과물 확인</a></p>\n</blockquote>","id":"dbe47df4-4d5d-5a8e-a0fd-46550cc3cebb"}},"pageContext":{"slug":"2020-02-06-react-todo-list4"}}}