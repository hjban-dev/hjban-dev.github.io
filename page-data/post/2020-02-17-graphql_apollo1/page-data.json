{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-02-17-graphql_apollo1","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Movie Web App - Introduction","tags":["GraphQL","React","Apollo"]},"fields":{"slug":"2020-02-17-graphql_apollo1"},"html":"<blockquote>\n<p>노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. <a href=\"https://academy.nomadcoders.co/\">https://academy.nomadcoders.co/</a></p>\n</blockquote>\n<h1>0 Introduction</h1>\n<h2>0.1 Introduction</h2>\n<p>이 강의는 React Apollo Movie입니다. GraphQL API를 위한 React Client를 만들겠습니다.<br>\n강의를 듣기 위해선 React, React Hooks, GraphQL API를 알아야 합니다.  </p>\n<p>Apollo : GraphQL 기반의 플랫폼  </p>\n<p>글로벌 저장소(global store)와 캐시 등을 제공하는 Apollo는 <strong>Apollo Client</strong>와 <strong>Apollo Server</strong>로 나뉘어 있습니다.<br>\nApollo Client는 React뿐만 아니라 Angular, Vue.js, iOS, Android 등 다양한 환경에서 사용할 수 있습니다. Apollo Server는 Node.js 기반의 HTTP 서버로 작동합니다. Apollo Client와 Apollo Server를 사용하면 GraphQL 기반의 데이터를 용이하게 관리할 수 있습니다.  </p>\n<p>redux에서는 가져올때마다 해당 서버의 url이 필요지만 서버가 graphql로 만들어졌다면 한번의 url작성으로 graphql에 쉽게 query를 작성할 수 있다.</p>\n<hr>\n<h2>0.2 Set Up</h2>\n<p>create-react-app으로 프로젝트를 생성, git repository생성 후 연동</p>\n<pre><code>$ create-react-app apollo-movie\n</code></pre>\n<p>create-react-app으로 생성된 폴더의 src폴더 내부는 App.js와 index.js만 남기고 모두 삭제<br>\ncomponents폴더 생성 후 App.js파일을 이동시킵니다.  </p>\n<p>styled-components, react-router-dom, apollo-boost, @apollo/react-hooks, graphql 설치</p>\n<pre><code>$ yarn add styled-components react-router-dom apollo-boost @apollo/react-hooks graphql\n</code></pre>\n<hr>\n<h2>0.3 Router and Styles</h2>\n<p>routes폴더 생성 후 Home.js와 Detail.js 생성<br>\nApp.js에 router를 만들어봅시다.</p>\n<pre><code class=\"language-javascript\">import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nfunction App() {\n  return (\n    &#x3C;Router>\n      &#x3C;Route exact path=\"/\" component={Home} />\n      &#x3C;Route exact path=\"/:id\" component={Detail} />\n    &#x3C;/Router>\n  );\n}\n\nexport default App;\n</code></pre>\n<p>경로에 따라 보여주는 Component를 다르게 해주었습니다. / 경로에선 Home Compoenent, /:id 이면 Detail Component가 노출되게 해주었습니다.<br>\nyarn start 실행 후 <a href=\"http://localhost:3000/%EB%A5%BC\">http://localhost:3000/를</a> 확인해보고 정상 작동한다면 router가 잘 생성된 것입니다.</p>\n<blockquote>\n<p><a href=\"https://d2.naver.com/helloworld/2838729\">참고</a></p>\n</blockquote>","id":"34c64359-2f8e-5444-a3ae-628099500951"}},"pageContext":{"slug":"2020-02-17-graphql_apollo1"}}}