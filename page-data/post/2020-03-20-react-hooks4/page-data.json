{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2020-03-20-react-hooks4","result":{"data":{"markdownRemark":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useTabs(useState)","tags":["React"]},"fields":{"slug":"2020-03-20-react-hooks4"},"html":"<blockquote>\n<p>노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. <a href=\"https://academy.nomadcoders.co/\">https://academy.nomadcoders.co/</a></p>\n</blockquote>\n<h1>1 useState</h1>\n<h2>1.3 useTabs</h2>\n<p>이번에는 계속해서 useState를 사용하여 커스텀 Hooks인 useTabs를 만들어보겠습니다.<br>\nuseTabs는 버튼에 따라 노출되는 내용을 변화시키겠습니다.  </p>\n<p>useInput은 args로 initialValue를 받고, initialValue를 초기값으로 갖는 useState를 작성해주었습니다.</p>\n<p>배열 객체를 사용하여 button과 내용을 나타나게 하겠습니다.<br>\ndummy로 content를 만들어줍니다.</p>\n<pre><code class=\"language-javascript\">const content = [\n  {\n    tab: \"Section 1\",\n    content: \"This is the content of the Section 1\"\n  },\n  {\n    tab: \"Section 2\",\n    content: \"This is the content of the Section 2\"\n  }\n];\n</code></pre>\n<p>위의 배열을 map()메소드를 사용하여 Section1, Section2 버튼을 만들겠습니다.</p>\n<pre><code class=\"language-javascript\">const App = () => {\n  return (\n    &#x3C;div className=\"App\">\n      {content.map((section) => (\n        &#x3C;button>{section.tab}&#x3C;/button>\n      ))}\n    &#x3C;/div>\n  );\n};\n\nexport default App;\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_3.jpg\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>버튼을 노출시키는 것은 간단했습니다.<br>\n이제 useTabs hook을 만들어봅시다. useTabs는 initialTab, allTabs 두개의 매개변수를 갖고,\ncurrentItem, changeItem 두 값을 return 하게 만들겠습니다.  </p>\n<p>매개변수 initialTab에는 초기에 노출할 값, allTabs에는 모든 tab의 정보를 주도록 만들겠습니다.</p>\n<pre><code class=\"language-javascript\">const useTabs = (initialTab, allTabs) => {\n  const [currentIndex, setCurrentIndex] = useState(initialTab); // useState에 initialTab을 초기값으로 세팅 \n  return {\n    currentItem: allTabs[currentIndex], // allTabs의 인덱스 값으로 찾은 현재 탭의 정보\n    changeItem: setCurrentIndex // 활성화 된 tab\n  };\n};\n</code></pre>\n<p>button에 onClick기능을 넣어 changeItem 실행하겠습니다.<br>\nchangeItem은 useTabs에서 setCurrentIndex을 실행하는 부분입니다.</p>\n<pre><code class=\"language-javascript\">const App = () => {\n  const { currentItem, changeItem } = useTabs(0, content);\n  return (\n    &#x3C;div className=\"App\">\n      {content.map((section, index) => (\n        &#x3C;button onClick={() => changeItem(index)}>{section.tab}&#x3C;/button>\n      ))}\n      &#x3C;div>{currentItem.content}&#x3C;/div>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_2.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>더 나은 코드를 만들기 위해 error부분을 잡겠습니다.</p>\n<pre><code class=\"language-javascript\">const useTabs = (initialTab, allTabs) => {\n  if (!allTabs || !Array.isArray(allTabs)) { \n    return; // useTabs를 사용할 때 두번째 매개변수를 주지 않거나, 두번째 매개변수가 매열이 아니라면 return(에러 페이지 뜨지 않게)\n  }\n  const [currentIndex, setCurrentIndex] = useState(initialTab);\n  return {\n    currentItem: allTabs[currentIndex],\n    changeItem: setCurrentIndex\n  };\n};\n</code></pre>","id":"01930880-0a03-5798-b70a-5e94e9ad9404"}},"pageContext":{"slug":"2020-03-20-react-hooks4"}}}