{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2020-03-23-react-hooks5","result":{"data":{"markdownRemark":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useEffect","tags":["React"]},"fields":{"slug":"2020-03-23-react-hooks5"},"html":"<blockquote>\n<p>노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. <a href=\"https://academy.nomadcoders.co/\">https://academy.nomadcoders.co/</a></p>\n</blockquote>\n<h1>2 useEffect</h1>\n<h2>2.0 Introduction to useEffect</h2>\n<p>useEffect Hook은 <strong>componentDidMount와 componentDidUpdate, componentWillUnmount라고 생각</strong>하면 됩니다.  </p>\n<p>아래코드를 살펴봅시다.\nsayHello라는 함수를 선언했고, useEffect의 매개변수로 sayHello()를 실행하겠습니다.</p>\n<pre><code class=\"language-javascript\">const App = () => {\n  const sayHello = () => console.log(\"hello\");\n\n  const [number, setNumber] = useState(0);\n  const [anumber, setaNumber] = useState(0);\n\n  useEffect( ()=> sayHello() );\n\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;div>Hi&#x3C;/div>\n      &#x3C;button onClick={() => setNumber(number + 1)}>{number}&#x3C;/button>\n      &#x3C;button onClick={() => setaNumber(anumber - 1)}>{anumber}&#x3C;/button>\n    &#x3C;/div>\n  );\n};\n\nexport default App;\n</code></pre>\n<p>아까 useEffect Hook은 componentDidMount와 componentDidUpdate, componentWillUnmount라고 했죠?<br>\n<strong>componentDidMount</strong>는 컴포넌트가 마운트된 직후,<br>\n<strong>componentDidUpdate</strong>는 갱신이 일어난 직후<br>\n<strong>componentWillUnmount</strong>는 컴포넌트가 마운트 해제되어 제거되기 직전에 실행 되는 컴포넌트 입니다.  </p>\n<p>위 코드에서 useEffect Hook 때문에 App 컴포넌트가 마운트된 직후와, 갱신이 일어날 때 마다 sayHello()가 실행됩니다.</p>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_3.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>브라우저 새로고침 후에 hello가 보이시죠? 그리고 버튼을 누를때 마다도 실행되고 있습니다.  </p>\n<p>useEffect는 사실 2개의 인자를 받습니다. 첫번째는 function으로의 effect이고, 두번째 인자는 deps로 만약 deps가 있다면 deps의 리스트에 있는 값일 때만 첫번째 인자인 effect가 실행되도록 합니다.  </p>\n<p>두번째 args에 number를 넣어봅시다.</p>\n<pre><code class=\"language-javascript\">const App = () => {\n  const sayHello = () => console.log(\"hello\");\n\n  const [number, setNumber] = useState(0);\n  const [anumber, setaNumber] = useState(0);\n\n  useEffect(sayHello, [number]);\n\n  (...)\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_3.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>두번째 args에 number를 넣었기 때문에 증가 버튼을 누를때만 sayHello함수가 실행됩니다.<br>\n만약 컴포넌트가 마운트 되었을 때만 실행 시키고 싶다면 두번째 매개변수를 <code>[]</code> 형태인 빈 배열로 두면 됩니다.</p>","id":"133ca9c7-10be-586e-92fe-a66c39dd8d77"}},"pageContext":{"slug":"2020-03-23-react-hooks5"}}}