{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/2020-04-06-react-hooks10","result":{"data":{"markdownRemark":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useFadeIn(useRef, useEffect) & useNetwork(useRef, useEffect)","tags":["React"]},"fields":{"slug":"2020-04-06-react-hooks10"},"html":"<blockquote>\n<p>노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. <a href=\"https://academy.nomadcoders.co/\">https://academy.nomadcoders.co/</a></p>\n</blockquote>\n<h1>2 useEffect</h1>\n<h2>2.5 useFadeIn &#x26; useNetwork</h2>\n<h3>useFadeIn</h3>\n<p>useFadeIn은 말 그대로 서서히 나타나게 만드는 hook입니다. 이번 장에선 animation을 hook에 포함 시키는 법을 알아보겠습니다.<br>\nuseFadeIn hook은 기본적으로 useRef를 사용하여 하나의 element를 갖고 하나의 element만 return하게 하겠습니다.</p>\n<pre><code class=\"language-javascript\">const useFadeIn = () => {\n    const element = useRef(); // useRef를 사용하여 요소 선택\n    return element;\n}\n\nconst App = () => {\n  const fadeInH1 = usefadeIn();\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;h1 {...fadeInH1}> Hello &#x3C;/h1> \n    &#x3C;/div>\n  );\n};\n</code></pre>\n<p>useFadeIn에 opacity style과 transition style을 넣어주겠습니다.</p>\n<pre><code class=\"language-javascript\">const usefadeIn = () => {\n  const element = useRef();\n  useEffect(() => {\n    // element 안으로 들어가기 위해서 useEffect 사용\n    if (element.current) {\n      const { current } = element;\n      current.style.transition = `opacity 1s`;\n      current.style.opacity = 1;\n    }\n  }, []);\n  return { ref: element, style: { opacity: 0 } }; \n};\n\nconst App = () => {\n  const fadeInH1 = usefadeIn();\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;h1 {...fadeInH1}> Hello &#x3C;/h1>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_10.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>fadein 효과가 정상 작동하는 것을 확인했습니다. 조금 더 나아가서 duration과 delay옵션을 추가하겠습니다.</p>\n<pre><code class=\"language-javascript\">const usefadeIn = (duration = 1, delay = 0) => {\n  if (typeof duration !== \"number\" || typeof delay !== \"number\") {\n    return;\n  }\n  const element = useRef();\n  useEffect(() => { // element 안으로 들어가기 위해서 useEffect 사용\n    if (element.current) {\n      const { current } = element;\n      current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\n      current.style.opacity = 1;\n    }\n  }, []);\n  return { ref: element, style: { opacity: 0 } };\n};\n\nconst App = () => {\n  const fadeInH1 = usefadeIn(1);\n  const fadeInP = usefadeIn(1, 0.5); // delay 옵션 추가\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;h1 {...fadeInH1}> Hello &#x3C;/h1>\n      &#x3C;p {...fadeInP}>Welcome&#x3C;/p>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_11.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<p>usefadeIn을 활용하여 fadein, fadeout 뿐만 아니라 다른 애니메이션으로도 활용 가능합니다.</p>\n<hr>\n<h3>useNetwork</h3>\n<p>useNetwork는 navigator가 online또는 offline일 때 작동하게 하겠습니다.<br>\n예를 들어 인터넷이 중간에 끊겼을 때 '인터넷이 끊겼습니다.' 라는 팝업을 띄어줄 수 있겠죠?</p>\n<pre><code class=\"language-javascript\">const useNetwork = onChange => {\n  const [status, setStatus] = useState(navigator.onLine); // true 또는 false 값\n  const handleChange = () => {\n    if (typeof onChange === \"function\") {\n      onChange(navigator.onLine);\n    }\n    setStatus(navigator.onLine);\n  };\n  useEffect(() => {\n    window.addEventListener(\"online\", handleChange);\n    window.addEventListener(\"offline\", handleChange);\n    () => { //componentWillUnMount 일 때 remove 실행\n      window.removeEventListener(\"online\", handleChange);\n      window.removeEventListener(\"offline\", handleChange);\n    };\n  }, []);\n  return status;\n};\n\nconst App = () => {\n  const hanldeNetworkChange = online => { // 실행하는 change 함수\n    console.log(online ? \"It's Online state\" : \"It's Offline state\");\n  };\n  const online = useNetwork(hanldeNetworkChange);\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;h1>{online ? \"Online\" : \"Offline\"} &#x3C;/h1>\n      &#x3C;p>Welcome&#x3C;/p>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_12.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>","id":"c2987376-72e9-57a8-93c4-9fe93b1fb587"}},"pageContext":{"slug":"2020-04-06-react-hooks10"}}}