{"componentChunkName":"component---src-blog-template-js","path":"/post/2020-04-07-react-hooks11","result":{"data":{"markdownRemark":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useScroll(useState, useEffect) & useFullscreen(useRef)","tags":["React"]},"fields":{"slug":"2020-04-07-react-hooks11"},"html":"<blockquote>\n<p>노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. <a href=\"https://academy.nomadcoders.co/\">https://academy.nomadcoders.co/</a></p>\n</blockquote>\n<h1>2 useEffect</h1>\n<h2>2.6 useScroll &#x26; useFullscreen</h2>\n<h3>useScroll</h3>\n<p>useScroll은 사용자가 스크롤을 사용할 때 지정한 무언가를 지나치면 실행하게 하겠습니다. </p>\n<pre><code class=\"language-javascript\">const useScroll = () => {\n  const [state, setState] = useState({\n    x: 0, // x와 y의 초기값을 0으로 지정\n    y: 0\n  });\n  const onScroll = () => {\n    setState({ x: window.scrollX, y: window.scrollY });\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll); // scorll할 때 onScroll 이벤트 핸들러 지정\n    return () => window.removeEventListener(\"scroll\", onScroll); // clean up\n  }, []);\n  return state;\n};\n\nconst App = () => {\n  const { y } = useScroll();\n  return (\n    &#x3C;div className=\"App\" style={{ height: \"200vh\" }}>\n      &#x3C;h1 style={{ position: \"fixed\", color: y > 100 ? \"red\" : \"blue\" }}>\n        Hello\n      &#x3C;/h1>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_13.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>\n<h3>useFullscreen</h3>\n<p>useFullscreen은 요소를 전체화면으로 변환하는 hook입니다.</p>\n<pre><code class=\"language-javascript\">const useFullscreen = callback => {\n  const element = useRef();\n  const runCb = isFull => {\n    if (callback &#x26;&#x26; typeof callback === \"function\") {\n      callback(isFull);\n    }\n  };\n  const triggerFull = () => { // full화면으로 변환하는 함수\n    if (element.current) {\n      if (element.current.requestFullscreen) { // chrome, safari\n        element.current.requestFullscreen();\n      } else if (element.current.mozRequestFullScreen) { // firefox\n        element.current.mozRequestFullScreen();\n      } else if (element.current.webkitRequestFullscreen) { // opera\n        element.current.webkitRequestFullscreen();\n      } else if (element.current.msRequestFullscreen) { // microsoft\n        element.current.msRequestFullscreen();\n      }\n      runCb(true);\n    }\n  };\n  const exitFull = () => { // full화면을 해제하는 함수\n    document.exitFullscreen();\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    runCb(false);\n  };\n  return { element, triggerFull, exitFull };\n};\n\nconst App = () => {\n  const onFullS = isFull => { // callback 함수\n    console.log(isFull ? \"Full\" : \"Small\");\n  };\n  const { element, triggerFull, exitFull } = useFullscreen(onFullS);\n  return (\n    &#x3C;div className=\"App\">\n      &#x3C;h1>Hello&#x3C;/h1>\n      &#x3C;div ref={element}>\n        &#x3C;img src=\"https://hjban-dev.github.io/public/logo.png\"/>\n        &#x3C;button onClick={exitFull}>exitFull&#x3C;/button>\n        &#x3C;button onClick={triggerFull}>triggerFull&#x3C;/button>\n      &#x3C;/div>\n    &#x3C;/div>\n  );\n};\n</code></pre>\n<center>\n<figure>\n<img src=\"/assets/post-img/react/hooks/nomad_react_hooks_15.gif\" alt=\"\">\n<figcaption>코드 실행 결과</figcaption>\n</figure>\n</center>","id":"63fd333e-35ff-5c03-a641-d32e2cda7f93"}},"pageContext":{"slug":"2020-04-07-react-hooks11"}}}