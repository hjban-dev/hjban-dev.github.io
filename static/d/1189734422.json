{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useScroll(useState, useEffect) & useFullscreen(useRef)","category":"React"},"fields":{"slug":"2020-04-07-react-hooks11"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.6 useScroll & useFullscreen useScroll useScroll은 사용자가 스크롤을 사용할 때 지정한 무언가를 지나치면 실행하게 하겠습니다.  useFullscreen useFullscreen은 요소를 전체화면으로 변환하는 hook입니다.","id":"63fd333e-35ff-5c03-a641-d32e2cda7f93"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useFadeIn(useRef, useEffect) & useNetwork(useRef, useEffect)","category":"React"},"fields":{"slug":"2020-04-06-react-hooks10"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.5 useFadeIn & useNetwork useFadeIn useFadeIn은 말 그대로 서서히 나타나게 만드는 hook입니다. 이번 장에선 animation을 hook에 포함 시키는 법을 알아보겠습니다. useFadeIn hook은 기본적으로 useRef를 사용하여 하나의 element를 갖고 하나의 element만 return하게 하겠습니다. useFadeIn…","id":"c2987376-72e9-57a8-93c4-9fe93b1fb587"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useBeforeLeave(useEffect)","category":"React"},"fields":{"slug":"2020-04-02-react-hooks9"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.4 useBeforeLeave useBeforeLeave는 tab을 닫으려 할 때 실행하는 함수입니다. 이전 장의 useConfirm는 창을 닫기 전에 confirm창을 띄웠습니다. useBeforeLeave는 사용자의 마우스가 브라우저를 벗어나 위쪽으로 가면 실행하는 함수입니다.   이번에는 useEffect를 사용하겠습니다.","id":"0d473227-810e-5902-ae1a-00752c14d92e"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useConfirm & usePreventLeave","category":"React"},"fields":{"slug":"2020-04-01-react-hooks8"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.3 useConfirm & usePreventLeave 이번에 만들 두가지의 hook은 사실 hook이 아닙니다. useEffect와 useState를 사용하지 않는 함수 컴포넌트로 볼 수 있습니다. useConfirm useConfirm은 이벤트를 실행하기 전에 사용자에게 확인을 받는 기능을 하는 함수입니다. 확인을 받는 과정은 브라우저 기능인 confirm…","id":"22b30e42-e839-54ec-9a5f-1a5bb7751cd5"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useRef, useClick(useRef, useEffect) & useHover(useRef, useEffect)","category":"React"},"fields":{"slug":"2020-03-27-react-hooks7"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.2 useClick useRef useClick을 사용하기 전에 useRef() hook을 알아봅시다. 컴포넌트를 작성하다 보면 태그를 직접 다뤄야 할 때가 있습니다. js의 경우에는 document.getElementById 메서드로 선택했었죠.   React의 경우 특정 엘리먼트의 크기나 위치 등을 가져와 설정할 때 ref를 사용합니다. 일단 기본적으로 react useRef…","id":"75fe5447-fead-586d-8953-9fb33d3438ea"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useTitle(useState, useEffect)","category":"React"},"fields":{"slug":"2020-03-24-react-hooks6"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.1 useTitle useEffect를 이용하여 title을 바꾸는 useTitle hook을 만들어 보겠습니다. 일단 App 컴포넌트가 실행되면서 titleUpdater 선언됨. args로 \"My React App...\"를 넘겼기 때문에 useTitle함수의 useState가 할당된 title은 \"My React App...\" App 컴포넌트가 마운트 되면 useEffect…","id":"9bfa4032-5af3-5486-80c0-90f2539901e0"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useEffect","category":"React"},"fields":{"slug":"2020-03-23-react-hooks5"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 useEffect 2.0 Introduction to useEffect useEffect Hook은 componentDidMount와 componentDidUpdate, componentWillUnmount라고 생각하면 됩니다.   아래코드를 살펴봅시다.\nsayHello라는 함수를 선언했고, useEffect의 매개변수로 sayHello()를 실행하겠습니다. 아까 useEffect Hook…","id":"133ca9c7-10be-586e-92fe-a66c39dd8d77"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useTabs(useState)","category":"React"},"fields":{"slug":"2020-03-20-react-hooks4"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 1 useState 1.3 useTabs 이번에는 계속해서 useState를 사용하여 커스텀 Hooks인 useTabs를 만들어보겠습니다. useTabs는 버튼에 따라 노출되는 내용을 변화시키겠습니다.   useInput은 args로 initialValue를 받고, initialValue를 초기값으로 갖는 useState를 작성해주었습니다. 배열 객체를 사용하여 button…","id":"01930880-0a03-5798-b70a-5e94e9ad9404"}},{"node":{"frontmatter":{"title":"Javascript ES6 문법 Object, Destructuring","category":"Javascript"},"fields":{"slug":"2020-03-17-es2015_2"},"excerpt":"인프런의 모던 자바스크립트(javascript) 개발을 위한 ES6 강좌를 듣고 정리합니다.  자바스크립트 ES2015(ES6) 문법 정리 Object 간단히 객체생성하기 return 부분 getName : getName, 앞 뒤의 코드가 같을 땐 하나의 변수로 사용 가능 아래 코드처럼 처음 선언할 때에도 사용 가능 Destructuring Destructuring Array 배열 순서대로 변수 지정가능 Destructuring Object 객체에서 활용 가능 객체의 key값 name, age를 생성하여 obj…","id":"6f0a401a-f91e-537e-ac25-be8b70e10368"}},{"node":{"frontmatter":{"title":"Javascript ES6 문법 Scope, String, Array","category":"Javascript"},"fields":{"slug":"2020-03-13-es2015_1"},"excerpt":"인프런의 모던 자바스크립트(javascript) 개발을 위한 ES6 강좌를 듣고 정리합니다.  자바스크립트 ES2015(ES6) 문법 정리 Scope let es2015이전의 문법에선 var라는 키워드로 정의했고, var로 선언된 변수는 스코프를 함수 단위로 결정 사용한다. 위 코드의 mycode라는 변수는 함수 안에서 선언된 것이 아니라, if문 안에 선언되어 있으므로 전역변수이다. 그래서 if문 밖에서도 mycode를 호출가능하다. 하지만 let은 블록 단위로 스코프를 만든다. mycode는 if문 안에서만 호출 가능. let…","id":"0ecce666-8e6a-5076-b943-21cbe0a7843f"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useInput(useState)","category":"React"},"fields":{"slug":"2020-03-01-react-hooks3"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 1 useState 1.1 useInput useState를 사용하여 커스텀 Hooks인 useInput을 만들어보겠습니다. useInput은 기본적으로 input을 업데이트 합니다.   useInput은 args로 initialValue를 받고, initialValue를 초기값으로 갖는 useState를 작성해주었습니다. useInput함수에서 사용자가 변화를 주기 전에 value를 return…","id":"ac710b55-d50e-515e-b4d9-dabec9899863"}},{"node":{"frontmatter":{"title":"Movie Web App - Local State 2","category":"GraphQL"},"fields":{"slug":"2020-02-24-graphql_apollo5"},"excerpt":"노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ 2 Local State 2.2 Connecting Detail and Home apollo.js파일에서 Mutation의 LikeMovie를 toggleLikeMovie로 변경하겠습니다. Movie.js에 LIKE_MOVIE로 만들었던 gql부분의 likeMovie를 toggleLikeMovie로 변경하고, isLiked를 추가하겠습니다. 그리고 Movie.js파일의 하단에 return…","id":"22dd696c-23e9-5cc9-b6d3-9eb654f3dc12"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - useState","category":"React"},"fields":{"slug":"2020-02-21-react-hooks2"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 1 useState 1.0 Introduction to useState hooks는 react의 state machine에 연결하는 기본적인 방법입니다. hooks를 사용하면 class를 사용하지 않고 함수만 사용하여 프로그래밍이 가능합니다. 알다시피 hooks가 생기기전엔 function Component엔 state를 작성할 수 없었습니다.   useState는 항상 2개의 value…","id":"873d9f23-d222-5ba1-8b0f-06f7541cdc8b"}},{"node":{"frontmatter":{"title":"실전형 리액트 Hooks 10가지 - Introduction","category":"React"},"fields":{"slug":"2020-02-21-react-hooks1"},"excerpt":"노마드코더의 실전형 리액트 Hooks 10가지 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ Introduction 0.0 Introduction to Nooks 사용자들은 Hooks를 만들고 오픈소스로 배포할 수 있습니다. useTitle useInput usePageLeave useClick useFadeIn useFullscreen useHover useNetwork useNotification useScroll useTaps usePreventLeave useComfirm useAxios…","id":"7be42d7b-c0a5-5f8d-b0d1-99d8bf131b77"}},{"node":{"frontmatter":{"title":"Movie Web App - Local State","category":"GraphQL"},"fields":{"slug":"2020-02-19-graphql_apollo4"},"excerpt":"노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ 2 Local State 2.0 Local State part One Apollo의 큰 장점 하나는 cache를 갖는다고 했습니다. 그래서 이번에는 각각의 Movie에 cache를 활용하여 기능하는 좋아요 버튼을 만들겠습니다.   apollo.js파일에 isLiked 라는 data를 만들고, isLiked는 true와 false를 값으로 갖는 boolean형태로 만들겠습니다.  apollo client…","id":"048ef966-ef2e-5743-8c15-1e99bed7cc07"}},{"node":{"frontmatter":{"title":"Movie Web App - Apollo GraphQL2","category":"GraphQL"},"fields":{"slug":"2020-02-19-graphql_apollo3"},"excerpt":"노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ 1 Apollo GraphQL 1.3 Apollo Cache and Styles Component와 style부분은 생략하였습니다.\nReact Apollo의 큰 장점중 하나는 cache를 갖고 있다는 것입니다. 한번 영화를 클릭하면 다음에 클릭할때는 loading이 뜨지 않습니다.   1.4 Data & Apollo Dev Tools 전 장에서 확인했었지만 서버를 시작하고 query…","id":"2f39e8fa-fdb5-5317-b450-42fc6a8681ad"}},{"node":{"frontmatter":{"title":"Movie Web App - Apollo GraphQL","category":"GraphQL"},"fields":{"slug":"2020-02-18-graphql_apollo2"},"excerpt":"노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ 1 Apollo GraphQL 1.0 Apollo Client apollo 공식 사이트의 설치 방법 apollo-boost는 GraphQL Yoga처럼 모든 것을 다 설정이 되어있는 package입니다. GraphQL Yoga의 경우는 준비가 된 server이고, apollo-boost는 client 입니다. 위 링크를 참고하여 apollo.js를 생성하여 내부에 apollo-boost로 client…","id":"620bc82b-fe18-5100-8514-bc1dc6cec0a5"}},{"node":{"frontmatter":{"title":"Movie Web App - Introduction","category":"GraphQL"},"fields":{"slug":"2020-02-17-graphql_apollo1"},"excerpt":"노마드코더의 GraphQL로 영화 웹 앱 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ 0 Introduction 0.1 Introduction 이 강의는 React Apollo Movie입니다. GraphQL API를 위한 React Client를 만들겠습니다. 강의를 듣기 위해선 React, React Hooks, GraphQL API를 알아야 합니다.   Apollo : GraphQL 기반의 플랫폼   글로벌 저장소(global store)와 캐시 등을 제공하는 Apollo는 Apollo…","id":"34c64359-2f8e-5444-a3ae-628099500951"}},{"node":{"frontmatter":{"title":"Movie API - Wrapping a REST API with GraphQL","category":"GraphQL"},"fields":{"slug":"2020-02-12-graphql5"},"excerpt":"노마드코더의 GraphQL로 영화 API 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ Creating Movie API by using GraphQL 11 Wrapping a REST API with GraphQL Part One https://yts.mx/api의 사이트의 https://yts.mx/api/v2/list_movies.json  API를 통해서 영화리스트를 불러오겠습니다.  https://yts.mx/api를 확인하면 Endpoint…","id":"839de800-5366-53e8-9f88-2dd1db090f5c"}},{"node":{"frontmatter":{"title":"Movie API - Mutations","category":"GraphQL"},"fields":{"slug":"2020-02-11-graphql4"},"excerpt":"노마드코더의 GraphQL로 영화 API 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ Creating Movie API by using GraphQL 8 Defining Mutations 자 이번엔 본격적으로 Movie App을 만들겠습니다. 처음으로 만들 것은 영화를 추가하는 함수 addMovie()입니다.   addMovie()함수를 분석해보겠습니다. arguments로 name과 score가 들어오고 두 argument를 기반으로 newMovie라는 변수를 생성합니다. 그리고 movies…","id":"06e2abe4-6ec9-55d6-a89f-545d9512c123"}},{"node":{"frontmatter":{"title":"Movie API - Arguments","category":"GraphQL"},"fields":{"slug":"2020-02-10-graphql3"},"excerpt":"노마드코더의 GraphQL로 영화 API 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ Creating Movie API by using GraphQL 7 Creating Queries with Arguments Resolvers는 GraphQL 서버에서 요청을 받는 위치입니다. GraphQL서버가 Query나 Mutation을 발견하면 Resolvers를 찾고, 해당 함수 실행하게 합니다. Resolvers가 하는일을 확인해봅시다. resolvers.js에 person…","id":"d8c78c6a-b9aa-55f4-8393-468f2ac5cfd7"}},{"node":{"frontmatter":{"title":"Movie API - Extending the Schema","category":"GraphQL"},"fields":{"slug":"2020-02-10-graphql2"},"excerpt":"노마드코더의 GraphQL로 영화 API 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ Creating Movie API by using GraphQL 5 Extending the Schema 위 이미지의 왼쪽 화면에서 Query를 요청했고, gql은 내 서버에서 schema.graphql을 발견하고, resolvers를 찾아서 hj를 반환합니다.   그러면 resolvers.js에서 name을 myName으로 변경해봅시다. Query.myName이 schema에는 없고, resolvers…","id":"532ab7fa-690a-5989-b9db-8d3a53a9c727"}},{"node":{"frontmatter":{"title":"Movie API - Introduction for Graph QL class","category":"GraphQL"},"fields":{"slug":"2020-02-07-graphql1"},"excerpt":"노마드코더의 GraphQL로 영화 API 만들기를 듣고 정리합니다. https://academy.nomadcoders.co/ Creating Movie API by using GraphQL 1 Hello and Introduction GraphQL은 서버 API를 통해 정보를 주고받기 위해 사용하는 질의 언어(query language)이다.   대부분의 어플리케이션은 자원을 사용하는 방식으로 HTTP method를 사용하여 REST API를 사용한다. REST API…","id":"9fba24cf-a3ab-56c7-80bd-7f177a8e278f"}},{"node":{"frontmatter":{"title":"Todo_List ReactJS Palette 컴포넌트 추가","category":"React"},"fields":{"slug":"2020-02-06-react-todo-list4"},"excerpt":"React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert https://velopert.com/3480\nTodo-List 결과물 확인 Todo_List 여기서부터는 필자가 만든 정리... 4. Palette 컴포넌트 추가 다섯번째 컴포넌트, Palette src/components/Palette.js src/components/css/Palette.css TodoListTemplate.js, TodoItemList.js, TodoItem.js는 생략하겠습니다.   Todo-List 결과물 확인","id":"dbe47df4-4d5d-5a8e-a0fd-46550cc3cebb"}},{"node":{"frontmatter":{"title":"Todo_List ReactJS 컴포넌트 최적화","category":"React"},"fields":{"slug":"2020-02-06-react-todo-list3"},"excerpt":"React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert https://velopert.com/3480\nTodo-List 결과물 확인 Todo_List 3. 컴포넌트 최적화 TodoItemList 최적화 지금 TodoItem는 input창에 텍스트를 입력할 때 마다 render함수가 실행되고 있습니다. React에서는 가상 DOM을 사용하기 때문에 변화는 없지만, 미세하게 자원이 낭비되고 있습니다. 컴포넌트 라이프 사이클 메소드중 shouldComponentUpdate…","id":"097b9d84-b7a3-5268-90d4-226620421924"}},{"node":{"frontmatter":{"title":"Todo_List ReactJS 상태관리 하기","category":"React"},"fields":{"slug":"2020-02-06-react-todo-list2"},"excerpt":"React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert https://velopert.com/3480\nTodo-List 결과물 확인 Todo_List 2. 상태관리 하기 상태관리는 어떻게 해야 할까? 현재 프로젝트에서 상태가 필요한 컴포넌트는 Form 과 TodoItemList 입니다. 컴포넌트들은 부모를 통하여 대화를 해야합니다.   그래서 App 이 Form 과 TodoItemList 의 부모 컴포넌트이니, 해당 컴포넌트에 input, todos…","id":"1894f026-b61d-57bd-9e64-42c9d3447fec"}},{"node":{"frontmatter":{"title":"Todo_List ReactJS 컴포넌트 구성","category":"React"},"fields":{"slug":"2020-02-05-react-todo-list1"},"excerpt":"React 기초 입문 프로젝트 – 흔하디 흔한 할 일 목록 만들기 by velopert https://velopert.com/3480\nTodo-List 결과물 확인 Todo_List 0. 시작하기 필자는 node, yarn, VS code 사용.  프로젝트 구성요소 프로젝트 초기화 같은 위치에 App.css, App.test.js, logo.svg 파일도 제거 1. 컴포넌트 구성하기 src 내부에 components 디렉토리 생성하여 컴포넌트들을 이곳에 생성 첫번째 컴포넌트, TodoTemplate src/components…","id":"de2a310d-5911-50dd-8909-0aacb593ff1d"}},{"node":{"frontmatter":{"title":"Gulp Deploying to GH Pages","category":"Gulp"},"fields":{"slug":"2020-02-05-gulp-nomad_gulp7"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 6 Deploying to GH Pages 6.0 Deploying to GH Pages gulp의 작업은 끝났지만 이번엔 github page를 사용해보겠습니다. gulp-gh-pages를 사용할거고 npm i -D gulp-bro로 설치 할 수 있습니다. Npm gulp-gh-pages 링크 Npm gulp-gh-pages 링크에서 확인할 수 있는 gulp-gh-pages 사용법 설치를 했으니 import…","id":"ac581128-74a6-5c7a-98b4-4e1a618e5253"}},{"node":{"frontmatter":{"title":"Gulp Babel Support","category":"Gulp"},"fields":{"slug":"2020-02-05-gulp-nomad_gulp6"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 5 Babel Support 5.0 Babelify + Browserify 마지막 남은 js를 실행해보겠습니다. gulp-bro를 사용하여 import, export등 브라우저가 알지 못하는 문법을 정리해줍시다. yarn add gulp-bro로 설치합니다. Npm gulp-bro 링크 Npm gulp-bro 링크에서 확인할 수 있는 gulp-bro 사용법 위 사용법을 확인해보면 babelify…","id":"95090b52-5f0b-5a22-8ca1-a5c1fc7f65c5"}},{"node":{"frontmatter":{"title":"Gulp SCSS Compilation","category":"Gulp"},"fields":{"slug":"2020-02-04-gulp-nomad_gulp5"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 4 SCSS Compilation 4.0 Gulp SASS 이번엔 SASS파일을 compile하겠습니다. 이번에도 gulp-sass라는 플러그인을 사용할거고, npm i node-sass gulp-sass -D 로 설치할 수 있습니다. 명령어가 조금 다른 이유는 gulp-sass는 node-sass와 같이 설치해야 합니다. Npm gulp-sass 링크 gulp-sass가 node-sass로 sass…","id":"af23590d-5d4e-5a26-9009-8522fdfddf9c"}},{"node":{"frontmatter":{"title":"Gulp Image Optimization","category":"Gulp"},"fields":{"slug":"2020-02-04-gulp-nomad_gulp4"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 3 Image Optimization 3.0 Image Optimization 이제 이미지를 최적화 해봅시다. 이번에도 gulp-image 라이브러리를 설치하여 사용해야합니다. 설치는 npm install -D gulp-image로 가능합니다. Npm gulp-image 링크 설치가 되었으면 import한 후 routes를 만들겠습니다. 우리는 src/img…","id":"5728ec16-d8e6-5e3a-a96f-f96311e567d3"}},{"node":{"frontmatter":{"title":"Gulp Webserver and Watching Files","category":"Gulp"},"fields":{"slug":"2020-02-03-gulp-nomad_gulp3"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 Webserver and Watching Files 2.0 Dev Server 개발 흐름을 파악했으니 이제 우리가 해야할 일은 개발 서버를 만들어보겠습니다. 우리는 gulp-webserver라는 플러그인을 사용하겠습니다. Npm gulp-webserver 링크 yarn add gulp-webserver -D로 설치하고 import해주겠습니다. webserver라는 상수를 만들어주겠습니다. gulp…","id":"a48d080a-6262-5238-b476-23bd60478310"}},{"node":{"frontmatter":{"title":"Gulp Pug Compilation","category":"Gulp"},"fields":{"slug":"2020-02-03-gulp-nomad_gulp2"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 1 Pug Compilation 1.0 Pug Task part One 자, 이제 Gulp에게 task를 주겠습니다! 아주 간단하게! :) 그냥 function을 export하거나 const하면 됩니다! 우리는 저번에 package.json에서 \"dev\"라는 명령어를 만들었죠? 그러니까 dev라는 function을 만들어보겠습니다. yarn dev명령을 했더니 console…","id":"37fb667c-2a45-5f31-a8bb-ce2638c45920"}},{"node":{"frontmatter":{"title":"Gulp Introduction","category":"Gulp"},"fields":{"slug":"2020-01-31-gulp-nomad_gulp1"},"excerpt":"노마드코더의 Gulp 90분 마스터하기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 0 Introduction 0.1 Introduction Gulp.js가 어떻게 webpack을 대체할 수 있는지, 또 어떻게 우리의 워크플로우를 자동화할 수 있을지 배워봅시다. 우리는 pug, scss, 최신 javascript들을 Gulp로 Compiling하겠습니다. 0.2 Scaffolding Part One Gulp 공식사이트 링크 Nico는 강의에서 맥과 yarn…","id":"2c816b55-cf0f-53bd-a6dc-c5ac82d3bada"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Routing Bonus 3","category":"React"},"fields":{"slug":"2020-01-30-react-nomad_react6_3"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 6 Routing Bonus 6.4 Redirecting 지난 장의 Detail Component에 props를 확인했더니, 4가지의 props가 나왔죠? 우리는 그 중 location 부분만 필요했으니 props를 location으로 수정하겠습니다. 페이지에서 movie card를 누르면 이전 장에서 확인했던 것처럼 props 정보를 받을 수 있었지만, 그냥 직접적으로 /movie-detail…","id":"f63d4df2-7c7b-550a-8066-1ecda08fb1aa"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Routing Bonus 2","category":"React"},"fields":{"slug":"2020-01-30-react-nomad_react6_2"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 6 Routing Bonus 6.2 Building the Navigation 이번엔 Navigation Component를 만들고 모든 페이지의 상단에 떠있게 만들어봅시다. routes폴더에 Navigation.js를 만들고 Home과 About 두 개의 메뉴를 가진 div를 return하는 function Component…","id":"6c96bac8-3712-5ca9-9637-6e5db02055f5"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Routing Bonus 1","category":"React"},"fields":{"slug":"2020-01-29-react-nomad_react6_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 6 Routing Bonus 6.0 Getting Ready for the Router 이번엔 완성했던 Movie App에 조금 더 인터랙션을 추가하고, 상단에 메뉴를 추가해봅시다. 한번쯤 들어보셨던 얘기겠지만, React는 SPA(Single Page Applicatoin…","id":"be30003d-ec75-5bed-8dbe-48d117f90f78"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Conclusions","category":"React"},"fields":{"slug":"2020-01-28-react-nomad_react5_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 5 Conclusions 5.0 Deploying to Github Pages 자, 이제 우리가 만든 코드를 cloud에 올려봅시다. 먼저 gh-pages를 설치해야 합니다.  gh-pages 모듈은 만든 코드를 github page 도메인에 파일을 게시해줍니다. 쉽게 말하면 github로 구성된 웹 사이트입니다. 여러분들이 html, css, javascript…","id":"1073fd27-a783-56c5-96da-2e03d3483c79"}},{"node":{"frontmatter":{"title":"level 1-31. 문자열 내 마음대로 정렬하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-27-level1-31-text_array"},"excerpt":"level 1. 문자열 내 마음대로 정렬하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12915 문제 제한사항 strings는 길이 1 이상, 50이하인 배열입니다. strings의 원소는 소문자 알파벳으로 이루어져 있습니다. strings의 원소는 길이 1 이상, 100이하인 문자열입니다. 모든 strings의 원소의 길이는 n보다 큽니다. 인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 - 문자열이 앞쪽에 위치합니다. 입출력 예 string n…","id":"309aeb0f-2ef4-5aee-930b-b61df773e146"}},{"node":{"frontmatter":{"title":"level 1-30. 모의고사 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-24-level1-30-mock_test"},"excerpt":"level 1. 모의고사 출처 : https://programmers.co.kr/learn/courses/30/lessons/42840 문제 제한사항 시험은 최대 10,000 문제로 구성되어있습니다. 문제의 정답은 1, 2, 3, 4, 5중 하나입니다. 가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요. 입출력 예 answers return 1,2,3,4,5 1 1,3,2,4,2 1,2,3 입출력 예 설명 가장 문제를 많이 맞힌 사람은 수포자 1입니다. 수포자…","id":"3f025e95-5038-54b3-b7a3-c177ed1d783c"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Making the Movie App 2","category":"React"},"fields":{"slug":"2020-01-23-react-nomad_react4_2"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 4 Making the Movie App 4.2 Styling the Movies 전 장에서 Component를 불러와 노출시키는 것까지 진행했으니, 이번엔 불러온 Component에 스타일을 적용해봅시다.  style을 적용하기 전에 각각의 태그에 클래스를 넣어주겠습니다. 이전 장에 있던 id값은 사용하지 않아서 지워줬습니다. 필자가 class=\"container\"속성을 줬는데 사실 className…","id":"e093a4a5-24e2-58ce-a3a0-6f9cf4b9bfb1"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Making the Movie App 1","category":"React"},"fields":{"slug":"2020-01-22-react-nomad_react4_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 4 Making the Movie App 4.0 Fetching Movies from API fetch의 사전적 의미 : 가지고 오다, 불러오다 위 단어를 프로그래밍에서 사용할 땐 데이터를 가져온다는 의미로 사용할 수 있겠죠? Javascript에서 data를 fetch하는 방법 중 하나는 fetch 입니다. 짧게 알아보고 가겠습니다. fetch   : Fetch API로 부르고 javascript…","id":"98790305-8d55-50bc-8e63-6454a598becd"}},{"node":{"frontmatter":{"title":"Movie App ReactJS State 2","category":"React"},"fields":{"slug":"2020-01-21-react-nomad_react3_2"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 3 State 3.2 Component Life Cycle 우리는 Component가 생성된 후 render가 실행된다고 했는데 사실 render가 실행되기 전,후로 호출되는 몇 가지 function이 있습니다. 이번 장에서는 React가 Component를 생성하고 없앨 때 진행되는 Cycle에 대해 알아봅시다. React class Component는 render…","id":"e8ea5809-ac5d-58be-b05d-f5465fee32c2"}},{"node":{"frontmatter":{"title":"Movie App ReactJS State 1","category":"React"},"fields":{"slug":"2020-01-20-react-nomad_react3_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 3 State 3.0 Class Components and State state가 중요한 이유는 보통 동적 데이터와 함께 작업할 때 만들어지기 때문입니다. 동적 데이터는 갑자기 생기고, 사라졌다가 다시 변경되는 데이터들을 말합니다. 전에 만들었던 Food Component는 지우고, function Component 만들어져 있던 App Component를 class Component…","id":"99f4eda8-63db-5bf2-8735-2f98c061f647"}},{"node":{"frontmatter":{"title":"참고하고 싶은 글들","category":"Etc"},"fields":{"slug":"2020-01-20-etc-bookmark"},"excerpt":"비전공자의 프로그래밍 공부법_데이먼 https://brunch.co.kr/@reinitiate/6   프로그래밍 독학할때 자주 하는 실수 5가지_노마드 코더 Nomad Coders https://www.youtube.com/watch?v=FF6CF8TZIhE&feature=emb_rel_pause 공부만 하지말고 직접 프로그래밍을 하라. 준비가 안되었다고 생각 말고…","id":"8b4cec8c-3890-57dd-a148-bf7b84c91dee"}},{"node":{"frontmatter":{"title":"level 1-29. 최대공약수와 최소공배수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-18-level1-29-greatest_least"},"excerpt":"level 1. 최대공약수와 최소공배수 출처 : https://programmers.co.kr/learn/courses/30/lessons/12940 문제 제한사항 두 수는 1이상 1000000이하의 자연수입니다. 입출력 예 n m return 3 12 3, 12 2 5 1, 10 입출력 예 설명 자연수 3와 12의 최대공약수는 3, 최소공배수는 12이므로 3, 12을 리턴해야 합니다. 자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 1, 10을 리턴해야 합니다. 내가 한 풀이 처음엔 i = 0 으로 for…","id":"55cdf46b-3fbc-5554-b47b-b4b0b51cd7fb"}},{"node":{"frontmatter":{"title":"Movie App ReactJS JSX & Props 3","category":"React"},"fields":{"slug":"2020-01-17-react-nomad_react2_3"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 JSX & Props 2.4 Protection with PropTypes 이번 장에서는 prop-types를 배워봅시다. prop-types는 Father Component가 Children Component사이에서 알맞은 정보전달이 되었는지 확인하는 라이브러리입니다. 다시 말해서 전달 받은 props가 내가 요청한 props가 맞는지 확인할 수 있습니다.   npm 공식 홈페이지의 prop…","id":"751dc694-ca7f-5e2e-a9bc-9ec539cae56e"}},{"node":{"frontmatter":{"title":"level 1-28. 이상한 문자 만들기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-17-level1-28-strange_text"},"excerpt":"level 1. 이상한 문자 만들기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12930 문제 제한사항 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다. 첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다. 입출력 예 d return \"try hello world\" \"TrY HeLlO WoRlD\" 입출력 예 설명 \"try hello world\"는 세 단어 \"try\", \"hello\", \"world…","id":"72629a02-a9cf-5975-b0bd-8440b73355b9"}},{"node":{"frontmatter":{"title":"Movie App ReactJS JSX & Props 2","category":"React"},"fields":{"slug":"2020-01-16-react-nomad_react2_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 JSX & Props 2.2 Dynamic Component Generation…","id":"34d70dcf-d8f9-5fa0-af30-0aadefaea8ec"}},{"node":{"frontmatter":{"title":"Movie App ReactJS JSX & Props 1","category":"React"},"fields":{"slug":"2020-01-14-react-nomad_react2_1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 2 JSX & Props 2.0 Creating your first React Component Component 의 사전적 의미 : (구성) 요소, 부품   이전 장에서 살펴봤던 코드이긴 한데... Component가 뭐지...? 자, 어렵게 생각하지 말고 위 코드를 살펴보자. App function이 HTML 코드를 return 하고 있다. 그걸로 끝이다. HTML…","id":"ddefa91f-366e-5122-95b2-662d97c41265"}},{"node":{"frontmatter":{"title":"Nomadcoder's ReactJS Setup","category":"React"},"fields":{"slug":"2020-01-13-react-nomad_react2"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 1 Setup 1.0 Creating your first React App create-react-app 설치를 했다는 가정하에 시작합니다.   c-r-a 설치는 이전 포스팅 참고 https://hjban-dev.github.io/react/2019/08/19/react-10-create-react-app/  1.1 Creating a Github Repository github에서 새 Repisitory…","id":"33568a83-5120-5937-94a8-50cb64562683"}},{"node":{"frontmatter":{"title":"Movie App ReactJS Introduction, Setup","category":"React"},"fields":{"slug":"2020-01-13-react-nomad_react0-1"},"excerpt":"노마드코더의 ReactJS로 웹 서비스 만들기 수업을 듣고 정리합니다. https://academy.nomadcoders.co/ 0 Introduction 0.0 Introduction 2019.07 버전 강의입니다. 이 강좌에서 리액트를 사용하는 이유, 방법, API에서 데이터를 가져오는 방법 등을 배웁니다. 0.1 Requirements node js, npm, npx, git 필요 설치되어 있는지는 cmd 창에서 확인 가능 ex) node -v, git -v 등 0.2 Theory Requirements React…","id":"70080c49-4d1b-5c9d-ac43-338229617b84"}},{"node":{"frontmatter":{"title":"level 1-27. 예산 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-13-level1-27-budget"},"excerpt":"level 1. 예산 출처 : https://programmers.co.kr/learn/courses/30/lessons/12982 문제 제한사항 d는 부서별로 신청한 금액이 들어있는 배열이며, 길이(전체 부서의 개수)는 1 이상 100 이하입니다. d의 각 원소는 부서별로 신청한 금액을 나타내며, 부서별 신청 금액은 1 이상 100,000 이하의 자연수입니다. budget은 예산을 나타내며, 1 이상 10,000,000 이하의 자연수입니다. 입출력 예 d budget result 1,3,2,5,4 9 3 2,2,3,3 10…","id":"46c891fb-f001-578d-90c3-ccbae1443f5a"}},{"node":{"frontmatter":{"title":"level 1-26. 직사각형 별찍기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-13-level1-26-rectangle_star"},"excerpt":"level 1. 직사각형 별찍기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12969 문제 제한사항 n과 m은 각각 1000 이하인 자연수입니다. 입출력 예 data output 5 3 *****  *****  ***** 내가 한 풀이 이 문제도 문제 자체가 어려운건 아니였는데 초기화 상태의 기본 코드가 어려워서 도전을 미뤘다. 아래 코드가 기본 가이드 코드여서 process.stdin.on() 형식이 무슨 상태인지 몰랐음. 들어오는 매개변수가 각각 변수 a,b…","id":"89e6b791-c3d0-5bef-a136-3030c922836e"}},{"node":{"frontmatter":{"title":"level 1-25. 정수 제곱근 판별 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-10-level1-25-number_squr"},"excerpt":"level 1. 정수 제곱근 판별 출처 : https://programmers.co.kr/learn/courses/30/lessons/12934 문제 제한사항 n은 1이상, 50000000000000 이하인 양의 정수입니다. 입출력 예 n answer 121 144 3 -1 입출력 예 설명 121은 양의 정수 11의 제곱이므로, (11+1)를 제곱한 144를 리턴합니다. 3은 양의 정수의 제곱이 아니므로, -1을 리턴합니다. 내가 한 풀이 제곱근이라는 말 자체가 어려웠지, 자바스크립트 Math객체에 sqrt…","id":"dbdcf26e-b90b-5040-b845-28163326e57b"}},{"node":{"frontmatter":{"title":"level 1-24. 정수 내림차순으로 배치하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-10-level1-24-number_sort"},"excerpt":"level 1. 정수 내림차순으로 배치하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12933 문제 제한사항 n은 1이상 8000000000 이하인 자연수입니다. 입출력 예 n answer 118372 873211 내가 한 풀이 이것도 전 포스팅인 21.자릿수 더하기, 22.자연수 뒤집어 배열로 만들기, 23.자연수 뒤집어 배열로 만들기 랑 비슷한 문제였다.  다른사람 풀이 한글자의 숫자뿐이라 굳이 sort() 내부 함수 쓸 필요없이 sort()와 reverse…","id":"9a756201-01b4-5c40-9b21-9bebef7a88c8"}},{"node":{"frontmatter":{"title":"구글 애널리틱스와 태그 매니저 요약","category":"Google"},"fields":{"slug":"2020-01-09-etc-06-google_tagmanager3"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 설명합니다. (기본적인 부분 설명 생략) 울면서 공부한 구글 어쩌구 후기 구글 애널리틱스 : 사람들이 내 홈페이지 왜 들어왔는지 확인 가능 구글 태그매니저 : 어떻게 들어올때 추적할지 설정 구글 애널리틱스 Google Analytics 페이지 관련 모든 통계를 확인 할 수 있음. 이벤트를 설정하기에 html 파일 수정 필요 : html 지식 필요   구글 태그매니저Google Tag Manager 처음 설치 후엔 html…","id":"c06f2aeb-62c0-5c28-b105-93a2d917978e"}},{"node":{"frontmatter":{"title":"개발자를 위한 구글 태그매니저[Google Tag Manager]의 설치","category":"Google"},"fields":{"slug":"2020-01-09-etc-05-google_tagmanager2"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 설명합니다. (기본적인 부분 설명 생략) 구글 태그매니저Google Tag Manager '구글 태그매니저' 태그 설치 과정 태그생성 : 추가하고자 하는 태그(이벤트) 생성  트리거 지정 : 태그를 실행시키는 트리거 작성 ex…","id":"7abfa90c-9ac7-57c8-9910-fea8369df8fc"}},{"node":{"frontmatter":{"title":"개발자를 위한 구글 태그매니저[Google Tag Manager]의 개념","category":"Google"},"fields":{"slug":"2020-01-09-etc-04-google_tagmanager1"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 설명합니다. (기본적인 부분 설명 생략) 구글 태그매니저Google Tag Manager 후... GA…","id":"f37900ed-8102-5654-a086-f0975227248e"}},{"node":{"frontmatter":{"title":"level 1-23. 하샤드 수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-08-level1-23-hashad"},"excerpt":"level 1. 자연수 뒤집어 배열로 만들기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12947 문제 제한사항 x는 1 이상, 10000 이하인 정수입니다. 입출력 예 n answer 10 true 12 true 11 false 13 false 입출력 예 설명 10의 모든 자릿수의 합(1 + 0)은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다. 12의 모든 자릿수의 합(1 + 2)은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다. 1…","id":"bb4e9139-b4f0-5f57-8788-0ee9e342d9e5"}},{"node":{"frontmatter":{"title":"level 1-22. 자연수 뒤집어 배열로 만들기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-08-level1-22-arr_of_number"},"excerpt":"level 1. 자연수 뒤집어 배열로 만들기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12932 문제 제한사항 n은 10,000,000,000이하인 자연수입니다. 입출력 예 n answer 12345 5,4,3,2,1 입출력 예 설명 1 + 2 + 3 = 6이므로 6을 return 하면 됩니다. 9 + 8 + 7 = 24이므로 24를 return 하면 됩니다. 내가 한 풀이 바로 전에 풀었던 2…","id":"02fcab25-524c-55ed-9a93-496c687ca0c2"}},{"node":{"frontmatter":{"title":"level 1-21. 자릿수 더하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-08-level1-21-sum_of_number"},"excerpt":"level 1. 자릿수 더하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12931 문제 제한사항 N의 범위 : 100,000,000 이하의 자연수 입출력 예 n answer 123 6 987 24 입출력 예 설명 1 + 2 + 3 = 6이므로 6을 return 하면 됩니다. 9 + 8 + 7 = 24이므로 24를 return 하면 됩니다. 내가 한 풀이 흠 숫자를 배열로 넣어서 reduce…","id":"23e54e28-985c-5e18-83e9-a8ec2d0ca306"}},{"node":{"frontmatter":{"title":"level 1-20. 콜라츠 추측 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-07-level1-20-collatz"},"excerpt":"level 1. 콜라츠 추측 출처 : https://programmers.co.kr/learn/courses/30/lessons/12943 문제 제한사항 입력된 수, num은 1 이상 8000000 미만인 정수입니다. 입출력 예 n answer 6 8 16 4 626331 -1 입출력 예 설명 입력된 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다. 16 → 8 → 4 → 2 → 1 이되어 총 4번만에 1이 됩니다. 626331은 500번을 시도해도…","id":"6ea8024b-859a-5ae0-a66b-eccd8d20f440"}},{"node":{"frontmatter":{"title":"후회만 남은 2019 돌아보며","category":"Etc"},"fields":{"slug":"2020-01-07-etc-2019"},"excerpt":"후회만 남은 2019 돌아보며 \"책일기\", \"새로운 개발 언어 습득하기\" \"영어 서적 읽기\" 매년 초엔 새로운 다이어리를 썼고, 앞 장에 다가오는 년에 대한 다짐과 목표를 적었다.\n그저 습관처럼 하는 일이였고, 초여름이 되면 다이어리는 슬슬 먼지가 쌓이고, 점점 거들떠보지도 않게 되고...\n그건 그냥 나의 매년 이벤트였다. 연 초를 보내는 나만의 방법. 문제는. 올해는 달랐다는 것이다. 나도 모르는 사이 어른이라고 인식하고 있던 나이 25. 누군가 들으면 비웃겠지만, 나에겐 오지 않을 것 같았던 2…","id":"5c93b53d-344a-5f09-8d80-add50aa5cb8e"}},{"node":{"frontmatter":{"title":"level 1-19. x만큼 간격이 있는 n개의 숫자 (Javascript)","category":"Algorithm"},"fields":{"slug":"2020-01-03-level1-19-n_length_number"},"excerpt":"level 1. x만큼 간격이 있는 n개의 숫자 출처 : https://programmers.co.kr/learn/courses/30/lessons/12954 문제 제한사항 x는 -10000000 이상, 10000000 이하인 정수입니다. n은 1000 이하인 자연수입니다. 입출력 예 x n answer 2 5 2, 4, 6, 8, 10 4 3 4, 8, 12 -4 2 -4, -8 내가 한 풀이 오래 생각할 필요 없이 반복문으로 돌려서 해결했다. x를 n번 반복 다른사람 풀이 흠...들어온 n번 자리까지의 배열을 만들고, 내부를 x…","id":"190348c1-28dd-5c6f-8d18-ffe86cd9b54a"}},{"node":{"frontmatter":{"title":"개발자를 위한 구글 애널리틱스[Google Analytics] 이벤트 설정","category":"Google"},"fields":{"slug":"2020-01-02-etc-03-google_analitics3"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 개념만 설명합니다. (기본적인 부분 설명 생략) 구글 애널리틱스 Google Analytics 자! 이제 GA 이벤트를 설정해볼까나? 우선 사용자가 웹사이트에 반응을 보였다는 것은 사용자가 우리가 제공하는 상품이나 서비스 혹은 컨텐츠에 관심이 있다로 해석할 수 있습니다.\nGA…","id":"06f935fa-67fd-5429-ae45-64b02611438b"}},{"node":{"frontmatter":{"title":"개발자를 위한 구글 애널리틱스[Google Analytics] 활용","category":"Google"},"fields":{"slug":"2020-01-02-etc-02-google_analitics2"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 개념만 설명합니다. (기본적인 부분 설명 생략) 구글 애널리틱스 Google Analytics…","id":"84cf3851-aad7-5e1f-a531-b76218e2f933"}},{"node":{"frontmatter":{"title":"개발자를 위한 구글 애널리틱스[Google Analytics]의 개념","category":"Google"},"fields":{"slug":"2020-01-02-etc-01-google_analitics"},"excerpt":"https://analyticsmarketing.co.kr/ 참고 간단하고 불친절하게 개념만 설명합니다. (기본적인 부분 설명 생략) 구글 애널리틱스 Google Analytics 도대체 '구글 애널리틱스' 는 무엇인가?-? 말 그대로 구글에서 무료로 제공하는 애널리틱스(Analytics) 이다. Analytics…","id":"bd9f7358-075f-53a6-8a60-4d3147531e94"}},{"node":{"frontmatter":{"title":"level 1-18. 문자열 내림차순으로 배치하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-31-level1-18-string_descending"},"excerpt":"level 1. 문자열 내림차순으로 배치하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12917 문제 제한사항 str은 길이 1 이상인 문자열입니다. 입출력 예 s answer \"Zbcdefg\" \"gfedcbZ\" 내가 한 풀이 사실 문제 이해 안함. 예시 보니 뒤집는 것 같아서 요리조리 하니까 통과했다...ㅋㅋㅋ 내장 메소드만 사용해서 설명 없음. 다른사람 풀이 from() 대신 split() 사용. sort((a,b) => a < b ? 1 : -…","id":"1cd4b409-f374-5722-b0db-a432093aeddb"}},{"node":{"frontmatter":{"title":"level 1-17. 같은 숫자는 싫어 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-30-level1-17-no_same_number"},"excerpt":"level 1. 같은 숫자는 싫어 출처 : https://programmers.co.kr/learn/courses/30/lessons/12906 문제 제한사항 배열 arr의 크기 : 1,000,000 이하의 자연수 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수 입출력 예 input answer 1,1,3,3,0,1,1 1,3,0,1 4,4,4,3,3 4,3 내가 한 풀이 문제 보자 마자 for in 반복문을 떠올렸지만 내장메서드 사용하려고 계속 머리 굴림. map…","id":"a3545a17-4550-5024-9407-5aa6ae50cdf4"}},{"node":{"frontmatter":{"title":"Javascript 헷갈리는 개념과 예제 정리 심화 1","category":"Javascript"},"fields":{"slug":"2019-12-30-javascript_deepen1"},"excerpt":"Javascript 헷갈리는 개념과 예제 정리 심화 1 출처 (https://helloworldjavascript.net/) let, const 변수와 블록 스코프  const let var 스코프 블록 스코프 블록 스코프 함수 스코프 재대입 X O O 재선언 X X O 호이스팅 X X O 사용 권장 1순위 2순위 3순위","id":"39313a09-1d31-5112-99ca-c620f21eb920"}},{"node":{"frontmatter":{"title":"level 1-16. 문자열 내 p와 y의 개수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-20-level1-16-p_y_length"},"excerpt":"level 1. 문자열 내 p와 y의 개수 출처 : https://programmers.co.kr/learn/courses/30/lessons/12916 문제 제한사항 문자열 s의 길이 : 50 이하의 자연수 문자열 s는 알파벳으로만 이루어져 있습니다. 입출력 예 s return \"pPoooyY\" true \"Pyy\" false 입출력 예 설명 'p'의 개수 2개, 'y'의 개수 2개로 같으므로 true를 return 합니다. 'p'의 개수 1개, 'y'의 개수 2개로 다르므로 false를 return…","id":"d010d06c-dd40-5939-875f-3b4e192b8af2"}},{"node":{"frontmatter":{"title":"Javascript 헷갈리는 개념과 예제 정리 기초","category":"Javascript"},"fields":{"slug":"2019-12-17-javascript_method"},"excerpt":"Javascript 헷갈리는 개념 예제 정리 기초 출처 (https://helloworldjavascript.net/) 변수 isNaN() 메서드 isFinite() 메서드 parseInt() 메서드 : 문자열을 숫자로 toString() 메서드 : 숫자를 문자로 템플릿 리터럴 (Template Literal) : 여러 줄로 이루어진 문자열도 표현 가능 string 객체의 속성과 메서드 JavaScript에서는 아래의 값들은 모두 falsy이고, 이를 제외한 모든 값들은 truthy입니다. false null undefined…","id":"ffc07efd-1c30-52fa-8337-94b5b3da1842"}},{"node":{"frontmatter":{"title":"자바스크립트의 함수 방식으로 클래스 만들기","category":"Javascript"},"fields":{"slug":"2019-12-17-class_function"},"excerpt":"함수 방식으로 클래스 만들기 사용법 리터럴 방식과 동일하게 클래스 설계 단계와 설계한 클래스를 사용하는 단계인 객체 사용 단계로 나눠집니다. 구분 진행 순서 클래스 설계 단계 1. 문법  2. 생성자 정의 방법  3. 프로퍼티 정의 방법  4. 메서드 정의 방법 객체 사용 단계 5. 인스턴스 생성 방법  6. 객체 외부에서 프로퍼티와 메서드 접근 방법  7. 객체 내부에서 프로퍼티와 메서드 접근 방법…","id":"1ff021cb-1da4-57c4-9902-aab7b300989c"}},{"node":{"frontmatter":{"title":"level 1-15. 나누어 떨어지는 숫자 배열 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-16-level1-15-division_array-"},"excerpt":"level 1. 나누어 떨어지는 숫자 배열 출처 : https://programmers.co.kr/learn/courses/30/lessons/12918 문제 제한사항 arr은 자연수를 담은 배열입니다. 정수 i, j에 대해 i ≠ j 이면 arri ≠ arrj 입니다. divisor는 자연수입니다. array는 길이 1 이상인 배열입니다. 입출력 예 arr divisior return 5, 9, 7, 10 5 5, 10 2, 36, 1, 3 1 1, 2, 3, 36 3, 2, 6 10 -1 입출력 예 설명 arr의 원소 중…","id":"82fa6d17-9a0a-5504-a78b-5690d3acccc2"}},{"node":{"frontmatter":{"title":"level 1-14. 문자열 다루기 기본 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-13-level1-14-string"},"excerpt":"level 1. 문자열 다루기 기본 출처 : https://programmers.co.kr/learn/courses/30/lessons/12918 문제 제한사항 s는 길이 1 이상, 길이 8 이하인 문자열입니다. 입출력 예 s return \"a234\" false \"1234\" true \"12345\" false 내가 한 풀이 변수 answer 초기 값은 false. 변수 condition 으로 s의 길이 4 또는 6 인지 검사하고, true면 answer의 값을 true로 바꾸고 내부 반복문 실행. s의 각각을 isNaN…","id":"2892f501-f79f-5344-beea-3fa7bd7cf9f1"}},{"node":{"frontmatter":{"title":"자바스크립트의 오브젝트 리터럴 방식으로 클래스 만들기","category":"Javascript"},"fields":{"slug":"2019-12-13-class_literal"},"excerpt":"오브젝트 리터럴 방식으로 클래스 만들기 클래스를 만드는 세 가지 방법 중 가장 간단한 방법입니다. 사용법 클래스를 만드는 방법은 크게 클래스 설계 단계와 설계한 클래스를 사용하는 단계인 객체 사용 단계로 나눠집니다. 구분 진행 순서 클래스 설계 단계 1. 문법  2. 생성자 정의 방법  3. 프로퍼티 정의 방법  4. 메서드 정의 방법 객체 사용 단계 5. 인스턴스 생성 방법  6. 객체 외부에서 프로퍼티와 메서드 접근 방법  7. 객체 내부에서 프로퍼티와 메서드 접근 방법…","id":"8f086ba7-66ac-5c1f-87aa-2fddaf78f22f"}},{"node":{"frontmatter":{"title":"자바스크립트의 클래스 관련 기본 개념과 용어정리","category":"Javascript"},"fields":{"slug":"2019-12-12-02-about_class"},"excerpt":"…","id":"76a65f16-76b0-5f18-9e34-178a02540fed"}},{"node":{"frontmatter":{"title":"자바스크립트의 클래스 소개","category":"Javascript"},"fields":{"slug":"2019-12-12-01-intro_class"},"excerpt":"Javascript 클래스 소개 Javascript…","id":"05f2a371-174b-5ce3-acc5-bd9702bbb703"}},{"node":{"frontmatter":{"title":"브라우저 너비에 따른 반응형 속성 추가","category":"Javascript"},"fields":{"slug":"2019-12-11-response_class"},"excerpt":"브라우저 너비에 따른 반응형 속성 추가 반응형 사이트 만들기 예제 코드 풀이 변수 sizeMode 는 삼항연산자(이중삼항연산자) 사용 (조건이 만족하면 전자를 출력, 아니라면 후자 출력) 조건 (width가 1440 이상인가)를 실행 -> 만족하면 4를 출력 만족 못하면 2 실행 조건 (width가 1023 이상인가)를 실행 -> 만족하면 3을 출력 만족 못하면 3 실행 조건(width가 767 이상인가)를 실행 -> 만족하면 2를 출력 만족 못하면 1을 출력 변수 sizeMode…","id":"ed06f583-e307-58ac-afba-6e5908c2189a"}},{"node":{"frontmatter":{"title":"스크롤 내리면 헤더 위치에 맞게 메뉴 고정","category":"Javascript"},"fields":{"slug":"2019-12-10-scroll_header_fix"},"excerpt":"스크롤 내리면 헤더 위치에 맞게 메뉴 고정 예제 코드 풀이 현재 페이지의 Y값이 header의 좌표값보다 크면 헤더 고정 pageYOffset -> scrollY 과 같음 (브라우저 호환성때문에 pageYOffset를 쓰도록 권장) 참고 : https://www.w3schools.com/","id":"55ff5192-7bed-52ba-823c-184581ef3d13"}},{"node":{"frontmatter":{"title":"level 1-13. 2016년 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-10-level1-13-2016"},"excerpt":"level 1. 2016년 출처 : https://programmers.co.kr/learn/courses/30/lessons/12901 문제 제한사항 2016년은 윤년입니다. 2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다) 입출력 예 a b return 5 24 TUE 1 1 FRI 내가 한 풀이 Date 객체 생성 후 setFullYear() 메서드로 날짜 지정\ngetDay() 메서드로 요일 인덱스 불러와서 day 변수에 저장된 요일을 불러옴. 다른사람 풀이 Date…","id":"4f81434f-2658-5c87-939d-e67855c35451"}},{"node":{"frontmatter":{"title":"level 1-12. 문자열을 정수로 바꾸기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-10-level1-12-change_string"},"excerpt":"level 1. 문자열을 정수로 바꾸기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12925 문제 제한사항 str의 길이는 1 이상 5이하입니다. str의 맨앞에는 부호(+, -)가 올 수 있습니다. str는 부호와 숫자로만 이루어져있습니다. str는 \"0\"으로 시작하지 않습니다. 입출력 예 str return \"1234\" 1234 \"-1234\" -1234 입출력 예 설명   예를들어 str이 1234이면 1234를 반환하고, -1234이면 -123…","id":"715f1dcb-f42c-5e8a-9524-7607abb417b7"}},{"node":{"frontmatter":{"title":"level 1-11. 짝수와 홀수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-10-level1-11-odd_even"},"excerpt":"level 1. 짝수와 홀수 출처 : https://programmers.co.kr/learn/courses/30/lessons/12937 문제 제한사항 num은 int 범위의 정수입니다. 0은 짝수입니다. 입출력 예 num return 3 \"Odd\" 4 \"Even\" 내가 한 풀이 삼항연산자로 조건에 따른 answer 를 return 다른사람 풀이 접근방법은 나와 비슷해서 따로 적지 않는다. 배운점 가뿐.","id":"a0f3c961-d0c2-54ca-a76c-0b0c75d01458"}},{"node":{"frontmatter":{"title":"level 1-10. K번째수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-09-level1-10-number_of_k"},"excerpt":"level 1. K번째수 출처 : https://programmers.co.kr/learn/courses/30/lessons/42748 문제 제한사항 array의 길이는 1 이상 100 이하입니다. array의 각 원소는 1 이상 100 이하입니다. commands의 길이는 1 이상 50 이하입니다. commands의 각 원소는 길이가 3입니다. 입출력 예 array commands return 1, 5, 2, 6, 3, 7, 4 [2, 5, 3, 4, 4, 1, 1, 7, 3] 5, 6, 3 입출력 예 설명   1, 5, 2,…","id":"48853c1f-ff73-598b-81e6-12ba5d94733c"}},{"node":{"frontmatter":{"title":"level 1-9. 서울에서 김서방 찾기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-09-level1-09-kim"},"excerpt":"level 1. 서울에서 김서방 찾기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12919 문제 제한사항 seoul은 길이 1 이상, 1000 이하인 배열입니다. seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다. \"Kim\"은 반드시 seoul 안에 포함되어 있습니다. 입출력 예 seoul return \"Jane\", \"Kim\" 김서방은 1에 있다 내가 한 풀이 보자마자 for in…","id":"777b73ef-1d2a-534a-b8aa-bd1c97e3ae5a"}},{"node":{"frontmatter":{"title":"level 1-8. 두 정수 사이의 합 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-06-level1-08-sum_of_numbers"},"excerpt":"level 1. 두 정수 사이의 합 출처 : https://programmers.co.kr/learn/courses/30/lessons/12912 문제 제한사항 a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요. a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다. a와 b의 대소관계는 정해져있지 않습니다. 입출력 예 a b return 3 5 12 3 3 3 5 3 12 내가 한 풀이 변수 number는 매개변수로 들어온 a,b 를 배열로 만들고, sort…","id":"460ad8c5-d597-5d48-8d63-2274e97c1987"}},{"node":{"frontmatter":{"title":"level 1-7. 가운데 글자 가져오기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-06-level1-07-center_text"},"excerpt":"level 1. 가운데 글자 가져오기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12903 문제 제한사항 s는 길이가 1 이상, 100이하인 스트링입니다. 입출력 예 s return \"abcde\" \"c\" \"qwer\" \"we\" 내가 한 풀이 변수 sLength 는 매개변수 s의 개수를 2로 나눈 몫 \nanswer 는 s.length를 2로 나눈 나머지가 0 이라면 sLength 번째 문자열과 sLength+1 번째 문자열을 반환.\n그렇지 않으면 sLength…","id":"37c6b757-e789-59d0-8576-f2e3603d778a"}},{"node":{"frontmatter":{"title":"level 1-6. 제일 작은 수 제거하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-05-level1-06-smallest-number"},"excerpt":"level 1. 제일 작은 수 제거하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12935 문제 제한사항 arr은 길이 1 이상인 배열입니다. 인덱스 i, j에 대해 i ≠ j이면 arri ≠ arrj 입니다. 입출력 예 arr return 4,3,2,1 4,3,2 10 -1 3,1,2,4 3,2,4 내가 한 풀이 매개변수 input의 개수가 1보다 크다면 Math.min() 메서드로 매개변수의 제일 작은 수의 인덱스 값이 들어 있는 변수 min 생성 Array…","id":"982b01f5-3ff3-5dc2-807f-b095050e81e9"}},{"node":{"frontmatter":{"title":"level 1-5. 핸드폰 번호 가리기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-05-level1-05-hide-phone-number"},"excerpt":"level 1. 핸드폰 번호 가리기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12948 문제 제한사항 s는 길이 4 이상, 20이하인 문자열입니다. 입출력 예 phone_number return 01033334444 ***4444 027778888 *8888 내가 한 풀이 들어온 매개변수 phone_number의 글자 수를 체크하여 글자수에서 4를 뺀 수까지는 answer에 \"*\"를 삽입 그렇지 않으면 매개변수의 i…","id":"40fcadd5-7c11-546b-91a6-e74760b2961e"}},{"node":{"frontmatter":{"title":"level 1-4. 수박수박수박수박수박수? (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-04-level1-04-watermelon"},"excerpt":"level 1. 수박수박수박수박수박수? 출처 : https://programmers.co.kr/learn/courses/30/lessons/12922 문제 제한사항 n은 길이 10,000이하인 자연수입니다. 입출력 예 n return 4 \"수박수박\" 3 \"수박수\" 내가 한 풀이 매개변수를 for 반복문을 실행하여 1부터 n까지 2로 나누어, 나머지가 0이면 차례로 answer에 \"수\"를 넣고, 나머지가…","id":"506866af-5cd9-5298-b170-ed4204e51bcf"}},{"node":{"frontmatter":{"title":"level 1-3. 약수의 합 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-04-level1-03-sum-aliquot"},"excerpt":"level 1. 약수의 합 출처 : https://programmers.co.kr/learn/courses/30/lessons/12928 문제 제한사항 n은 0 이상 3000이하인 정수입니다. 입출력 예 n return 12 28 5 6 입출력 예 설명   12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다. 5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다. 내가 한 풀이 매개변수를 for 반복문을 실행하여 n을 1부터 n까지의 수로 나눠서 나머지가…","id":"e8b5e06d-1c8c-5020-b2cb-668f51e530cc"}},{"node":{"frontmatter":{"title":"level 1-2. 평균 구하기 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-12-03-level1-02-average"},"excerpt":"level 1. 평균 구하기 출처 : https://programmers.co.kr/learn/courses/30/lessons/12944 문제 제한사항 arr은 길이 1 이상, 100 이하인 배열입니다. arr의 원소는 -10,000 이상 10,000 이하인 정수입니다. 입출력 예 arr return 1,2,3,4 2.5 5,5 5 내가 한 풀이 매개변수로 들어온 배열을 for in 반복문을 실행하여 요소들의 합을 구하고 length로 나눈다. 다른사람 풀이 Array 의 메서드 reduce()를 사용했다. ( es…","id":"3c277219-d5f7-5649-92ec-9eaf2d182f77"}},{"node":{"frontmatter":{"title":"MarkDown 문법 정리","category":"Git"},"fields":{"slug":"2019-12-03-git-00-markdown"},"excerpt":"몇번을 보고 또 봐도 헷갈리는 나레기를 위한 문법 정리!^^ 출처   마크다운(MarkDown) 은? 파일 확장자가 .md로 된 파일이 마크다운 문법으로 작성된 파일 사용법이 매우 쉽고, 빠르게 문서를 정리할 수 있음 (문법과 관리 모두 편리) 마크다운 문법(syntax) 제목(Header) 결과 =   제목 1 제목 2 제목 3 제목 4 제목 5 제목 6 강조(Emphasis) 각각 <em> , <strong> ,<del> 태그로 변환됩니다. 이텔릭체는 텍스트 양 옆에 * 혹은 _를 사용하세요. 두껍게는 ** 혹은 _…","id":"52047985-a7ba-541a-a21e-63992bbd54df"}},{"node":{"frontmatter":{"title":"level 1-1. 완주하지 못한 선수 (Javascript)","category":"Algorithm"},"fields":{"slug":"2019-10-02-level1-01-player"},"excerpt":"level 1. 완주하지 못한 선수 출처 : https://programmers.co.kr/learn/courses/30/lessons/42576 문제 제한사항 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다. completion의 길이는 participant의 길이보다 1 작습니다. 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다. 참가자 중에는 동명이인이 있을 수 있습니다. 입출력 예 participant completion return \"leo\", \"kiki\", \"eden…","id":"72b0fab0-a5aa-5912-b6d3-480bf2a2c528"}},{"node":{"frontmatter":{"title":"알고리즘 문제 풀이에 앞서","category":"Algorithm"},"fields":{"slug":"2019-10-02-intro"},"excerpt":"알고리즘 코딩 예제 문제 출처 출처 : 프로그래머스 https://programmers.co.kr/learn/challenges?tab=all_challenges 다짐 매일 한문제씩 풀겠다고 하지 않겠다. 그래도 다음 이직할 때 쯤엔 프로그래머스 페이지의 모든 문제를 풀 수 있을 사고를 기르겠다.\n알고리즘 단어 그대로 주어진 문제를 논리적으로 해결하는 능력을 키우자. 한마디 알고리즘 얘기만 듣다가 저번달(2019.0…","id":"b489e1a1-75dd-5c19-82c8-9b54a49c6155"}},{"node":{"frontmatter":{"title":"Node.js에서 MongoDB 사용하는 로그인 예제 전체 코드","category":"Nodejs"},"fields":{"slug":"2019-08-22-nodejs-13-login3"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Node.js에서 MongoDB 사용하는 법을 알아본다   Node.js에서 MongoDB 사용하여 만드는 로그인 예제 MongoDB 설치 및 명령어 포스트 Node 에서 MongoDB 사용 및 명령어 포스트 구성 mongoDB에 local 데이터베이스 안에 users 라는 collection 안에 회원 정보가 있다는 가정하에 예제가 실행된다. 회원 정보에는 id, name, password…","id":"aabe7399-b350-5b93-ac93-e9b6b76917f4"}},{"node":{"frontmatter":{"title":"Node.js에서 MongoDB 사용하는 로그인 예제 2","category":"Nodejs"},"fields":{"slug":"2019-08-21-nodejs-12-login2"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Node.js에서 MongoDB 사용하는 법을 알아본다   Node.js에서 MongoDB 사용하여 만드는 로그인 예제 MongoDB 설치 및 명령어 포스트 Node 에서 MongoDB 사용 및 명령어 포스트 구성 mongoDB에 local 데이터베이스 안에 users 라는 collection 안에 회원 정보가 있다는 가정하에 예제가 실행된다. 회원 정보에는 id, name, password…","id":"3a825e4f-dcf4-569d-b020-d37143a53ed7"}},{"node":{"frontmatter":{"title":"Node.js에서 MongoDB 사용하는 로그인 예제 1","category":"Nodejs"},"fields":{"slug":"2019-08-21-nodejs-11-login1"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Node.js에서 MongoDB 사용하는 법을 알아본다   Node.js에서 MongoDB 사용하여 만드는 로그인 예제 MongoDB 설치 및 명령어 포스트 Node 에서 MongoDB 사용 및 명령어 포스트 구성 mongoDB에 local 데이터베이스 안에 users 라는 collection 안에 회원 정보가 있다는 가정하에 예제가 실행된다. 회원 정보에는 id, name, password…","id":"b7cba6d9-fc73-57af-842b-3047229b3183"}},{"node":{"frontmatter":{"title":"Node.js에서 MongoDB 사용하기","category":"Nodejs"},"fields":{"slug":"2019-08-21-nodejs-10-mongo"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Node.js에서 MongoDB 사용하는 법을 알아본다   Node.js에서 MongoDB 사용과 메서드 MongoDB 설치 및 명령어 포스트 Mongojs 설치 및 모듈 선언 npm mongojs 참고 설치 npm install mongojs --save\n(package.json 에서 설치 확인) app.js에 해당 모듈 추가  const MongoClient = require('mongodb').MongoClient MongoClient…","id":"5e183fb2-10ec-5a94-9c84-3893531565e9"}},{"node":{"frontmatter":{"title":"Create-react-app 설치 및 실행","category":"React"},"fields":{"slug":"2019-08-19-react-10-create-react-app"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 Create-react-app 설치 및 실행 설치 React 앱 작성 방법 중 하나인 create-react-app 사용 Node.js 가 설치 되어 있어야 함. nodejs.org 에서 파일 다운로드 후 설치 Node.js 설치하면 NPM 같이 설치 됨 설치 후 터미널에서 npm install -g create-react-app 명령어 통해서 버전 확인 터미널 여는법 : 윈도우 + r…","id":"e5f95589-8eaa-5394-909d-fdfe6e3eb941"}},{"node":{"frontmatter":{"title":"scoreboard(클릭으로 점수 +, - 기능) 예제 전체 소스","category":"React"},"fields":{"slug":"2019-08-16-react-09-example5"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 scoreboard(클릭으로 점수 +, - 기능) 전체 소스","id":"1ec783be-560a-5c2a-86f9-1ab3b860b8db"}},{"node":{"frontmatter":{"title":"scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 4","category":"React"},"fields":{"slug":"2019-08-16-react-08-example4"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 4 클릭시 score 증가하는 이벤트 incrementScore 함수를 추가하고 JSX에서 클릭 이벤트를 추가한다. onClick에 JSX expression을 추가하는데 함수를 호출하는게 아니라 함수 레퍼런스를 넣어야 한다.   리액트는 명령행 프로그래밍이 아니라 선언형 프로그래밍이다. 클릭을 하면 클릭시 실행할 function…","id":"7f56627b-d4ca-5108-b480-3d54a4ecb1cb"}},{"node":{"frontmatter":{"title":"scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 3","category":"React"},"fields":{"slug":"2019-08-16-react-07-example3"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 3 state 사용하여 Counter 컴포넌트 재구성 Counter function 컴포넌트를 class 컴포넌트로 변경 Counter 컴포넌트에서 사용되는 score를 앞에서는 부모로 부터 props 형태로 받았다. 이렇게 부모로부터 물려받게 되면 – + 버튼을 눌러서 score 값을 변경할 수 없다. ( 다시 한번 말하지만 props…","id":"ec60e9fa-1627-5750-b076-b17a7e901b72"}},{"node":{"frontmatter":{"title":"React state 개념과 사용","category":"React"},"fields":{"slug":"2019-08-16-react-06-state"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 React state state? 수정될 수 있는 값 state가 수정되면 ReactDOM.render 메서드가 호출되어 DOM이 업데이트 DOM을 업데이트해야 한다면 ReactDOM.render 메서드를 다시 호출할 필요 없이 state 값 업데이트 시간에 따라 변하는 데이터가 있다면 그 상태를 state로 관리하고 state의 값을 변하면 state와 연결된 뷰가 자동으로 렌더링이 된다. state…","id":"0c69dea0-a450-5d0a-81cc-d5bd8a251890"}},{"node":{"frontmatter":{"title":"scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 2","category":"React"},"fields":{"slug":"2019-08-14-react-05-example2"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 2 props 사용하여 scoreboard 제작 App 컴포넌트 재구성 Header 컴포넌트를 html attribute처럼 설정한다. title은 스트링으로 넘어갈 것이고 totalPlayers는 JSX expression으로 설정했으므로 number 타입으로 넘어간다.\nJSX…","id":"d3ed7648-d017-5903-98ca-93bfe91e1b73"}},{"node":{"frontmatter":{"title":"scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 1","category":"React"},"fields":{"slug":"2019-08-13-react-04-example1"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 scoreboard(클릭으로 점수 +, - 기능) 예제 만들기 1 구성 Header 컴포넌트와 Player 컴포넌트로 구성   Header 안에는 title과 플레이어 수로 구성   Player 안에는 선수 이름과 점수로 구성   Header 컴포넌트 function 컴포넌트로 제작   같은 코드를 ECMAScript6 화살표 함수 사용   Player…","id":"1cc6bac4-3938-5c46-80ea-c600559e9ed0"}},{"node":{"frontmatter":{"title":"React props 개념과 사용","category":"React"},"fields":{"slug":"2019-08-13-react-03-props"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 React props props? 컴포넌트에서 사용할 데이터 중 변하지 않는 데이터를 다룰 때 사용 부모 컴포넌트에서 자식 컴포넌트로 데이터를 전달할 때 사용 부모 컴포넌트로 받은 데이터, 값을 바꿀 수 없는 데이터 read only props 형태는 string, array, object, function 어떤 타입이든 상관없이 지정 함수형 컴포넌트에서 props 사용하기  JSX…","id":"71115aba-c5cc-5cb1-a9af-cf70aa0cd04f"}},{"node":{"frontmatter":{"title":"React 컴포넌트(Component)","category":"React"},"fields":{"slug":"2019-08-12-react-02-component"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 컴포넌트(Component) Component? UI를 독립적이고 재사용 가능한 조각으로 만든다 컴포넌트에는 function component 와 class component 두가지가 있다 되도록이면 function 컴포넌트 사용 권장 class 컴포넌트는 React.Component…","id":"26bc530e-dcd0-51a6-a93c-7aca22922317"}},{"node":{"frontmatter":{"title":"React에서 JSX 사용하기","category":"React"},"fields":{"slug":"2019-08-12-react-01-jsx"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 React에서 JSX 사용하기 JSX? JavaScript + XML의 합성어 자바스크립트의 확장문법 React Element를 생성하는 두가지 방법 1. React.createElement 메서드 사용 2. JSX 사용 babel - Unexpected token error 위의 app.js 를 실행하면 Unexpected token error 발생 JSX…","id":"e492374d-ac76-5a52-9136-253aa81dc3a2"}},{"node":{"frontmatter":{"title":"React 소개와 프로젝트 생성","category":"React"},"fields":{"slug":"2019-08-12-react-00-intro"},"excerpt":"ReactJS 이 정도는 알아야지 - 이효범 교재와 KOSMO React 프로그래밍 수업을 듣고 정리합니다. w3school 참고 React 소개와 프로젝트 생성 React? React는 사용자 인터페이스를 구축하기위한 JavaScript 라이브러리 가상 DOM 사용 동적 UI  React는 단지 ReactDOM.render로 DOM으로 렌더링되도록 한다. 단방향 데이터 흐름 지향 개발과 유지보수가 편리한 재사용 가능한 UI 구성 프로젝트 생성 준비 react 폴더 생성 후 app.js 와 index.html 생성 index…","id":"47d22f88-0342-544c-8a16-847eea8d0c25"}},{"node":{"frontmatter":{"title":"Nodejs Session 생성 및 사용","category":"Nodejs"},"fields":{"slug":"2019-08-08-nodejs-09-session"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Session 개념을 세우고 사용하는 법을 알아본다   Nodejs Session 생성 및 사용 Session 배경 쿠키보다 더 안전하고 많은 데이터를 저장하는 저장 방식 데이터를 웹 서버에 저장 웹 브라우저는 Session ID만 갖고 있어서 쿠키보다 더 안전   Express-Session 적용방법 설치 npm install express-session --save package.json 에서 설치 확인 app.js…","id":"afc2638c-f7f3-5736-9907-bdeb03587d1c"}},{"node":{"frontmatter":{"title":"MongoDB 설치 및 실행","category":"MongoDB"},"fields":{"slug":"2019-08-08-mongodb-00-mongo"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다.   MongoDB 설치 및 실행 MongoDB? NoSQL 데이터베이스 데이터 관련 형식은 JSON 과 유사 데이터베이스 및 객체 컬렉션 을 만드는데 사용할 수 있는 JavaScript API를 제공 설치 mongodb.com 에서 파일 다운로드 후 설치 설치 후 cmd에 mongo 라고 입력 했을 때 찾지 못하면 path환경 변수에 입력필요   path환경 변수 입력방법 mongo 다운 받은 경로에서 bin 폴더 안에 mongo.exe…","id":"e84da2a7-3c10-5267-a626-59faf5b3bc92"}},{"node":{"frontmatter":{"title":"Nodejs Cookie 생성 및 사용","category":"Nodejs"},"fields":{"slug":"2019-08-07-nodejs-08-cookie"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Cookie 개념을 세우고 사용하는 법을 알아본다   Nodejs Cookie 생성 및 사용 Cookie 배경 http 라는 통신 방식은 요청과 응답이 이루어지고 나면 연결이 끊김. 이전에 사용했던 사용자, 브라우저 등의 정보를 지속적으로 유지하기 위해 개발 ex…","id":"3ea7c70e-f436-546d-8c03-07f244042088"}},{"node":{"frontmatter":{"title":"POST방식을 이용한 정보의 전달","category":"Nodejs"},"fields":{"slug":"2019-08-06-nodejs-07-post"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. post 방식을 통한 정보의 전달 방법에 대해서 살펴보고 express에서 post를 다루는 방법을 배운다. POST 방식을 이용한 정보의 전달 POST방식 소개 서버에 있는 정보를 가져오는 것(GET)이 아닌 사용자의 정보를 서버에 전송(POST) 하는 방식 ex.사용자의 로그인 정보를 전송하거나, 작성한 글을 서버로 전송하는 것 본문영역(body)에 파라미터가 들어간다.   POST 방식으로 전송된 데이터의 사용 방법 post…","id":"5d0fc8c3-cb5e-5e77-9601-2fa16d55119d"}},{"node":{"frontmatter":{"title":"GET방식을 이용한 정보의 전달, 쿼리스트링","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-06-get"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. URL을 통해서 애플리케이션에 정보를 전달하는 방법에 대해서 알아본다. GET방식을 이용한 정보의 전달, 쿼리스트링 GET방식 소개 사용자의 접속(요청)에 따라서 어플리케이션이 응답한 정보를 웹브라우저에 URL을 확인하여 정보를 가져오는 것을 GET 방식이라 한다. 경우에 따라서는 쿼리스트링을 통해서 어떠한 정보를 앱에 요청해서 가져오기도 한다. 주소 문자열 요청 파라미터 주소문자열은 protocol, host, query string…","id":"2f7f6e68-51ff-5c22-b54d-d2ec737c059e"}},{"node":{"frontmatter":{"title":"Express모듈의 Router, Static 미들웨어","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-05-router"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. 미들웨어의 개념을 잡고 router 미들웨어와 static 미들웨어를 알아본다.   미들웨어 쉽게 말해 요청과 응답 사이에서 특수 기능을 수행  (모듈의 구성요소 중 하나가 미들웨어) app객체의 use()메서드로 미들웨어 등록 따지고 보면 미들웨어 실행 후 라우터 실행 Static 미들웨어 정적 파일을 제공할때 사용하는 미들웨어 정적 파일 : 기본적인 css 파일이나 js 파일 같이 아무리 요청해도 변경되지 않는 파일 ex) public…","id":"c6bd1c00-5a9b-5611-852d-efbb1ae9ddfe"}},{"node":{"frontmatter":{"title":"Express 모듈 설치와 사용","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-04-express"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Express 모듈 설치 후 Express에서 제공하는 미들웨어와 라우터 사용 웹 서버 만들기 Express 모듈 설치와 사용 Express는 자체적인 기능을 갖춘 라우팅 및 미들웨어 웹 프레임워크 Express 모듈 정의 Node.js만 사용하여 웹 앱을 만드는 것은 어렵고 복잡함 위 사항들을 간단하게 만들어주는 다양한 도구 중 가장 대표적인 것이 Express express 홈페이지 참고 Express 설치 터미널에서 npm init…","id":"73b49509-a114-5ab6-b862-4ebaf84442c8"}},{"node":{"frontmatter":{"title":"Nodejs 내부 모듈 File system","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-03-filesystem"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. File system 모듈을 이용해서 파일을 제어하는 법을 알아본다.   File System 모듈 노드의 파일시스템은 동기식 IO와 비동기식 IO를 함께 제공 Node.js 사이트의 File System 참고 fs모듈의 readFile() 메서드 readFileSync(path, options) : 동기식 IO파일을 읽어 들입니다. readFile(path, options, callback) : 비동기식 IO…","id":"0e774f7a-2250-534e-80e1-c5a325058b62"}},{"node":{"frontmatter":{"title":"Nodejs 모듈과 NPM","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-02-module"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Nodejs를 이용해서 간단한 서버 애플리케이션을 만들어 본다. 모듈과 NPM - nodejs 모듈 모듈 기초 모듈 = 부품 한 덩어리 웹서버를 처음부터 끝까지 만드는 것은 어렵고 복잡한 일 / nodejs 에서는 기본적인 웹서버를 만들어 놓고(내부 모듈), 사용자가 쓸 수 있도록 함  Nodejs의 내부 모듈 내부 모듈은 노드 설치시 기본으로 설치. require() 사용하여 불러올 수 있음 내장 모듈에 대한 정보 > nodejs api…","id":"7f32fc96-91fb-56f5-b5d3-4a6652467d41"}},{"node":{"frontmatter":{"title":"Nodejs 간단한 웹 앱 만들기","category":"Nodejs"},"fields":{"slug":"2019-08-05-nodejs-01-webapp"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. Nodejs를 이용해서 간단한 서버 에플리케이션을 만들어 본다. nodejs 간단한 웹 앱 만들기 nodejs 서버연결 서버연결을 위한 코드 node.org > about 에서 파일 복사 후 webserver.js 생성 후 붙여넣기\nhttp 내부 모듈을 불러와서 hostname의 port로 서버 생성 후 연결 (밑에서 해석) 터미널에서 node webserver.js 실행\n서버 종료할 때는 Ctrl + C  웹브라우저를 통해 http://12…","id":"dac86f03-5019-5cd7-a54c-a6110da9b2e4"}},{"node":{"frontmatter":{"title":"Nodejs 설치 및 실행","category":"Nodejs"},"fields":{"slug":"2019-08-01-nodejs-00-install-exec"},"excerpt":"생활코딩 Node.js 강의 와 KOSMO 노드JS 프로그래밍 수업을 듣고 정리합니다. nodejs 설치 및 실행 Node.js? 크롬V8엔진 기반으로 개발된 자바스크립트(JavaScript)를 이용하여 서버 프로그래밍을 할 수 있도록 해주는 플랫폼 설치 nodejs.org 에서 파일 다운로드 후 설치 node.js의 홀수 버전은 지속적으로 기능을 추가하는 stable 버전 짝수 버전은 안정적이고 지속적인 지원을 약속하는 LTS(Long Time Supports)버전. 짝수 버전 선호 또는 npm…","id":"faacb0a9-af78-5b9f-b1fd-890dd1bbe37f"}},{"node":{"frontmatter":{"title":"git 개념 정리 및 기본 용어, 소스트리","category":"Git"},"fields":{"slug":"2019-08-01-git-00-intro"},"excerpt":"인프런 강의 중 정호영 - git과 github 수업을 듣고 중요 내용을 정리합니다.   git 은? 형상 관리 시스템(Verson Control System) 의 한 종류입니다. 주로 개발자들이 프로그램과 관련된 파일들을 저장하는 데 사용합니다. 게임의 세이브 포인트와 유사한데, 언제든지 저장 시점으로 되돌아 갈 수 있습니다. 여기서는 세 가지 기본 기념만 배우려 합니다. 스테이지에 올린다 (add…","id":"6f70db50-6043-5a40-96d5-488ff9f43bb6"}}]}}}